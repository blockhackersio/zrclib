/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  WithdrawalAmountManagerTester,
  WithdrawalAmountManagerTesterInterface,
} from "../../contracts/WithdrawalAmountManagerTester";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "addDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_index",
        type: "uint16",
      },
    ],
    name: "consumeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "getWithdrawalAmounts",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalAmountManagerImpl.Balance[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061050c806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632f89a5011461005157806333026bb61461007b578063b02c43d014610090578063d711cf53146100e2575b600080fd5b61006461005f366004610342565b6100f5565b60405161007292919061035b565b60405180910390f35b61008e6100893660046103bf565b61010b565b005b6100c361009e366004610342565b600260205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b039093168352602083019190915201610072565b61008e6100f03660046103f7565b610119565b6060600061010283610125565b91509150915091565b61011582826102c1565b5050565b61012281610325565b50565b600080546001546060929184918380606460405190808252806020026020018201604052801561017b57816020015b60408051808201909152600080825260208201528152602001906001900390816101545790505b5090505b60008511801561019b57508261019961ffff841686610438565b105b1561025557606461ffff8316106101b157600080fd5b60006101c18561ffff8516610438565b600081815260026020908152604091829020825180840190935280546001600160a01b031683526001015490820181905291925090871161020c57602081019690965260009561021e565b602081015161021b9088610451565b96505b80838561ffff168151811061023557610235610464565b6020026020010181905250838061024b9061047a565b945050505061017f565b84156102a75760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e742062616c616e636520696e20706f6f6c00000000604482015260640160405180910390fd5b806102b383600161049b565b965096505050505050915091565b6040805180820182526001600160a01b03848116825260208083018581526001805460009081526002909352948220935184546001600160a01b03191693169290921783559051918301919091558154919061031c836104bd565b91905055505050565b8061ffff1660008082825461033a9190610438565b909155505050565b60006020828403121561035457600080fd5b5035919050565b60408082528351828201819052600091906020906060850190828801855b828110156103a757815180516001600160a01b03168552850151858501529285019290840190600101610379565b50505061ffff95909516930192909252509092915050565b600080604083850312156103d257600080fd5b82356001600160a01b03811681146103e957600080fd5b946020939093013593505050565b60006020828403121561040957600080fd5b813561ffff8116811461041b57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561044b5761044b610422565b92915050565b8181038181111561044b5761044b610422565b634e487b7160e01b600052603260045260246000fd5b600061ffff80831681810361049157610491610422565b6001019392505050565b61ffff8181168382160190808211156104b6576104b6610422565b5092915050565b6000600182016104cf576104cf610422565b506001019056fea264697066735822122098f827d79714a6737a9c96fc619dae9297a4469bcd9c3baaf44b5e701528353a64736f6c63430008120033";

type WithdrawalAmountManagerTesterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawalAmountManagerTesterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WithdrawalAmountManagerTester__factory extends ContractFactory {
  constructor(...args: WithdrawalAmountManagerTesterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WithdrawalAmountManagerTester> {
    return super.deploy(
      overrides || {}
    ) as Promise<WithdrawalAmountManagerTester>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WithdrawalAmountManagerTester {
    return super.attach(address) as WithdrawalAmountManagerTester;
  }
  override connect(signer: Signer): WithdrawalAmountManagerTester__factory {
    return super.connect(signer) as WithdrawalAmountManagerTester__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawalAmountManagerTesterInterface {
    return new utils.Interface(_abi) as WithdrawalAmountManagerTesterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WithdrawalAmountManagerTester {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WithdrawalAmountManagerTester;
  }
}
