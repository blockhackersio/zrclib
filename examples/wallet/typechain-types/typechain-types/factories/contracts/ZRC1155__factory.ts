/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ZRC1155, ZRC1155Interface } from "../../contracts/ZRC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_hasherAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapExecutor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "parseProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapExecutor",
    outputs: [
      {
        internalType: "contract SwapExecutor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "proof",
                type: "bytes",
              },
              {
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
              },
              {
                internalType: "bytes32[2]",
                name: "inputNullifiers",
                type: "bytes32[2]",
              },
              {
                internalType: "bytes32[2]",
                name: "outputCommitments",
                type: "bytes32[2]",
              },
              {
                internalType: "uint256",
                name: "publicAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "publicAsset",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "extDataHash",
                type: "bytes32",
              },
            ],
            internalType: "struct AbstractShieldedPool.ProofArguments",
            name: "proofArguments",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "int256",
                name: "extAmount",
                type: "int256",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput1",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput2",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountOutMin",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "swapRecipient",
                type: "address",
              },
              {
                internalType: "address",
                name: "swapRouter",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "swapData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "transactData",
                type: "bytes",
              },
            ],
            internalType: "struct AbstractShieldedPool.ExtData",
            name: "extData",
            type: "tuple",
          },
        ],
        internalType: "struct AbstractShieldedPool.Proof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "proof",
                type: "bytes",
              },
              {
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
              },
              {
                internalType: "bytes32[2]",
                name: "inputNullifiers",
                type: "bytes32[2]",
              },
              {
                internalType: "bytes32[2]",
                name: "outputCommitments",
                type: "bytes32[2]",
              },
              {
                internalType: "uint256",
                name: "publicAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "publicAsset",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "extDataHash",
                type: "bytes32",
              },
            ],
            internalType: "struct AbstractShieldedPool.ProofArguments",
            name: "proofArguments",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "int256",
                name: "extAmount",
                type: "int256",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput1",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput2",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountOutMin",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "swapRecipient",
                type: "address",
              },
              {
                internalType: "address",
                name: "swapRouter",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "swapData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "transactData",
                type: "bytes",
              },
            ],
            internalType: "struct AbstractShieldedPool.ExtData",
            name: "extData",
            type: "tuple",
          },
        ],
        internalType: "struct AbstractShieldedPool.Proof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "transactAndSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract TransactionVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600580546001600160401b0319169055600160f81b6006553480156200002957600080fd5b5060405162004737380380620047378339810160408190526200004c916200093e565b60058383838383604051806020016040528060008152506200007481620001a760201b60201c565b5060008263ffffffff1611620000dd5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001355760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000d4565b63ffffffff90911660a0526001600160a01b03908116608052600980548483166001600160a01b031991821617909155600880549284169290911691909117905562000180620001b9565b505050506200019e620001986200025160201b60201c565b62000255565b50505062000b2b565b6002620001b5828262000a2d565b5050565b60005b60a05163ffffffff168163ffffffff1610156200020f57620001e463ffffffff8216620002a7565b63ffffffff821660009081526003602052604090205580620002068162000af9565b915050620001bc565b5060a051620002249063ffffffff16620002a7565b6000805260046020527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec55565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600081600003620002d957507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b816001036200030957507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002036200033957507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003036200036957507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b816004036200039957507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600503620003c957507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b81600603620003f957507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b816007036200042957507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008036200045957507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b816009036200048957507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a03620004b957507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b03620004e957507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c036200051957507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d036200054957507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e036200057957507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f03620005a957507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b81601003620005d957507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b816011036200060857507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b816012036200063857507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b816013036200066857507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b816014036200069857507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b81601503620006c857507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b81601603620006f857507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b816017036200072857507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b816018036200075857507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b816019036200078857507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a03620007b857507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b03620007e857507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c036200081857507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d036200084857507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e036200087857507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f03620008a857507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b81602003620008d857507f25a90efc49af54a5b7154a6eaba978dcf04796b4984fe54be8d4ea8579e1f1e6919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000d4565b919050565b80516001600160a01b03811681146200092157600080fd5b6000806000606084860312156200095457600080fd5b6200095f8462000926565b92506200096f6020850162000926565b91506200097f6040850162000926565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620009b357607f821691505b602082108103620009d457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000a2857600081815260208120601f850160051c8101602086101562000a035750805b601f850160051c820191505b8181101562000a245782815560010162000a0f565b5050505b505050565b81516001600160401b0381111562000a495762000a4962000988565b62000a618162000a5a84546200099e565b84620009da565b602080601f83116001811462000a99576000841562000a805750858301515b600019600386901b1c1916600185901b17855562000a24565b600085815260208120601f198616915b8281101562000aca5788860151825594840194600190910190840162000aa9565b508582101562000ae95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600063ffffffff80831681810362000b2157634e487b7160e01b600052601160045260246000fd5b6001019392505050565b60805160a051613bd162000b666000396000818161032b015281816126cf015261278d0152600081816104f801526108500152613bd16000f3fe608060405234801561001057600080fd5b50600436106101fa5760003560e01c80637fe24ffe1161011a578063e5285dcc116100ad578063ed33639f1161007c578063ed33639f146104f3578063f178e47c1461051a578063f242432a1461053a578063f2fde38b1461054d578063fc7e9c6f1461056057600080fd5b8063e5285dcc1461045a578063e82955881461047d578063e985e9c514610490578063ec732959146104cc57600080fd5b8063a22cb465116100e9578063a22cb46514610402578063ba70f75714610415578063c2b40ae414610432578063cd87a3b41461045257600080fd5b80637fe24ffe146103c557806384fcec46146103ce5780638da5cb5b146103e157806390eeb02b146103f257600080fd5b8063414a37ba116101925780636d9833e3116101615780636d9833e314610375578063715018a61461038857806375d8498f14610390578063793deea3146103a357600080fd5b8063414a37ba146102f15780634e1273f4146103065780634ecf518b14610326578063622743291461036257600080fd5b806317cc915c116101ce57806317cc915c1461027d5780632b7ac3f3146102a05780632eb2c2d6146102cb57806338bf282e146102de57600080fd5b8062fdd58e146101ff57806301ffc9a7146102255780630e89341c14610248578063156e29f614610268575b600080fd5b61021261020d366004612941565b610578565b6040519081526020015b60405180910390f35b610238610233366004612981565b610611565b604051901515815260200161021c565b61025b6102563660046129a5565b610661565b60405161021c9190612a04565b61027b610276366004612a17565b6106f5565b005b61023861028b3660046129a5565b60076020526000908152604090205460ff1681565b6009546102b3906001600160a01b031681565b6040516001600160a01b03909116815260200161021c565b61027b6102d9366004612c03565b61071d565b6102126102ec366004612cac565b610769565b610212600080516020613b7c83398151915281565b610319610314366004612cce565b6108d6565b60405161021c9190612dd3565b61034d7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161021c565b61027b610370366004612de6565b6109ff565b6102386103833660046129a5565b610b61565b61027b610bdf565b61027b61039e366004612de6565b610bf3565b6103b66103b1366004612e20565b610f7a565b60405161021c93929190612eab565b61021260065481565b6008546102b3906001600160a01b031681565b600a546001600160a01b03166102b3565b60055461034d9063ffffffff1681565b61027b610410366004612ee2565b610fd9565b60055463ffffffff16600090815260046020526040902054610212565b6102126104403660046129a5565b60046020526000908152604090205481565b61034d606481565b6102386104683660046129a5565b60009081526007602052604090205460ff1690565b61021261048b3660046129a5565b610fe8565b61023861049e366004612f19565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6102127f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b6102b37f000000000000000000000000000000000000000000000000000000000000000081565b6102126105283660046129a5565b60036020526000908152604090205481565b61027b610548366004612f4c565b61163b565b61027b61055b366004612fb0565b611680565b60055461034d90640100000000900463ffffffff1681565b60006001600160a01b0383166105e85760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061064257506001600160e01b031982166303a24d0760e21b145b8061060b57506301ffc9a760e01b6001600160e01b031983161461060b565b60606002805461067090612fcb565b80601f016020809104026020016040519081016040528092919081815260200182805461069c90612fcb565b80156106e95780601f106106be576101008083540402835291602001916106e9565b820191906000526020600020905b8154815290600101906020018083116106cc57829003601f168201915b50505050509050919050565b6106fd6116f6565b61071883838360405180602001604052806000815250611750565b505050565b6001600160a01b0385163314806107395750610739853361049e565b6107555760405162461bcd60e51b81526004016105df90613005565b6107628585858585611864565b5050505050565b6000600080516020613b7c83398151915283106107c85760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c6460448201526064016105df565b600080516020613b7c833981519152821061082f5760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b60648201526084016105df565b6108376128df565b8381526020810183905260405163014cf2b360e51b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063299e56609061088d908490600401613069565b602060405180830381865afa1580156108aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ce919061309a565b949350505050565b6060815183511461093b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016105df565b600083516001600160401b0381111561095657610956612a4a565b60405190808252806020026020018201604052801561097f578160200160208202803683370190505b50905060005b84518110156109f7576109ca8582815181106109a3576109a3613053565b60200260200101518583815181106109bd576109bd613053565b6020026020010151610578565b8282815181106109dc576109dc613053565b60209081029190910101526109f0816130c9565b9050610985565b509392505050565b6000610a0e60208301836130e2565b602001351315610a5757610a5733610a268380613103565b610a389061010081019060e001612fb0565b6001600160a01b0316610a4e60208501856130e2565b60200135611a41565b610a6081611bbd565b6000610a6f60208301836130e2565b602001351215610b5e576000610a8860208301836130e2565b610a96906020810190612fb0565b6001600160a01b031603610aec5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f2061646472657373000060448201526064016105df565b610b5e610afc60208301836130e2565b610b0a906020810190612fb0565b610b148380613103565b610b269061010081019060e001612fb0565b6001600160a01b0316610b3c60208501856130e2565b60200135610b499061311a565b60405180602001604052806000815250611750565b50565b6000818103610b7257506000919050565b60055463ffffffff16805b63ffffffff81166000908152600460205260409020548403610ba3575060019392505050565b8063ffffffff16600003610bb5575060645b80610bbf81613136565b9150508163ffffffff168163ffffffff1603610b7d575060009392505050565b610be76116f6565b610bf160006120df565b565b6000610c0260208301836130e2565b6020013512610c535760405162461bcd60e51b815260206004820152601c60248201527f657874416d6f756e742073686f756c64206265206e656761746976650000000060448201526064016105df565b6000610c5f8280613103565b610c719061010081019060e001612fb0565b6001600160a01b031603610cc75760405162461bcd60e51b815260206004820152601d60248201527f7075626c696341737365742073686f756c64206e6f742062652030783000000060448201526064016105df565b610cd081611bbd565b6008546001600160a01b0316610ce960208301836130e2565b610cf7906020810190612fb0565b6001600160a01b031614610d585760405162461bcd60e51b815260206004820152602260248201527f6f6e6c7920737761704578656375746f722063616e20626520726563697069656044820152611b9d60f21b60648201526084016105df565b6000610d6760208301836130e2565b610d789060a0810190608001612fb0565b6001600160a01b031603610dce5760405162461bcd60e51b815260206004820152601a60248201527f746f6b656e4f75742073686f756c64206e6f742062652030783000000000000060448201526064016105df565b6000610ddd60208301836130e2565b60a0013511610e3c5760405162461bcd60e51b815260206004820152602560248201527f616d6f756e744f75744d696e2073686f756c6420626520677265617465722074604482015264068616e20360dc1b60648201526084016105df565b6008546001600160a01b031663a0c6a6ef610e578380613103565b610e699061010081019060e001612fb0565b610e7660208501856130e2565b610e879060a0810190608001612fb0565b610e9460208601866130e2565b60200135610ea19061311a565b610eae60208701876130e2565b60a00135610ebf60208801886130e2565b610ed19061010081019060e001612fb0565b610ede60208901896130e2565b610eef9060e081019060c001612fb0565b610efc60208a018a6130e2565b610f0b90610100810190613156565b610f1860208c018c6130e2565b610f2790610120810190613156565b6040518b63ffffffff1660e01b8152600401610f4c9a999897969594939291906131cc565b600060405180830381600087803b158015610f6657600080fd5b505af1158015610762573d6000803e3d6000fd5b610f826128df565b610f8a6128fd565b610f926128df565b83806020019051810190610fa6919061323e565b895160208b8101518b820193909352928a5281830193909352929092528082019290925291905285015283529193909250565b610fe4338383612131565b5050565b60008160000361101957507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160010361104857507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b8160020361107757507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003036110a657507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b816004036110d557507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b8160050361110457507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160060361113357507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b8160070361116257507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b8160080361119157507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b816009036111c057507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a036111ef57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b0361121e57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c0361124d57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d0361127c57507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e036112ab57507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f036112da57507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160100361130957507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160110361133757507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b8160120361136657507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b8160130361139557507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b816014036113c457507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b816015036113f357507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160160361142257507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b8160170361145157507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b8160180361148057507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b816019036114af57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a036114de57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b0361150d57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c0361153c57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d0361156b57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e0361159a57507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f036115c957507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b816020036115f857507f25a90efc49af54a5b7154a6eaba978dcf04796b4984fe54be8d4ea8579e1f1e6919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b60448201526064016105df565b919050565b6001600160a01b0385163314806116575750611657853361049e565b6116735760405162461bcd60e51b81526004016105df90613005565b6107628585858585612211565b6116886116f6565b6001600160a01b0381166116ed5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105df565b610b5e816120df565b600a546001600160a01b03163314610bf15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105df565b6001600160a01b0384166117b05760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016105df565b3360006117bc8561233b565b905060006117c98561233b565b90506000868152602081815260408083206001600160a01b038b168452909152812080548792906117fb90849061329b565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461185b83600089898989612386565b50505050505050565b81518351146118c65760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016105df565b6001600160a01b0384166118ec5760405162461bcd60e51b81526004016105df906132ae565b3360005b84518110156119d357600085828151811061190d5761190d613053565b60200260200101519050600085838151811061192b5761192b613053565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561197b5760405162461bcd60e51b81526004016105df906132f3565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906119b890849061329b565b92505081905550505050806119cc906130c9565b90506118f0565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611a2392919061333d565b60405180910390a4611a398187878787876124e1565b505050505050565b6001600160a01b038316611aa35760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016105df565b336000611aaf8461233b565b90506000611abc8461233b565b60408051602080820183526000918290528882528181528282206001600160a01b038b1683529052205490915084811015611b455760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016105df565b6000868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a460408051602081019091526000905261185b565b611bd3611bca8280613103565b60200135610b61565b611c155760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081b595c9adb19481c9bdbdd606a1b60448201526064016105df565b60005b611c228280613103565b506002811015611cbf57611c67611c398380613103565b6040018260028110611c4d57611c4d613053565b602002013560009081526007602052604090205460ff1690565b15611cad5760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b60448201526064016105df565b80611cb7816130c9565b915050611c18565b50600080516020613b7c833981519152611cdc60208301836130e2565b604051602001611cec91906133b0565b6040516020818303038152906040528051906020012060001c611d0f9190613508565b611d198280613103565b610100013514611d6b5760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c206461746120686173680000000060448201526064016105df565b600654611d779061311a565b611d8460208301836130e2565b60200135138015611da65750600654611da060208301836130e2565b60200135125b611dea5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b60448201526064016105df565b611dfb611df682613685565b61259c565b611e375760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b60448201526064016105df565b60005b611e448280613103565b506002811015611eaf57600160076000611e5e8580613103565b6040018460028110611e7257611e72613053565b6020020135815260200190815260200160002060006101000a81548160ff0219169083151502179055508080611ea7906130c9565b915050611e3a565b506000611ebf60208301836130e2565b602001351215611f3c576000611ed860208301836130e2565b611ee6906020810190612fb0565b6001600160a01b031603611f3c5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f2061646472657373000060448201526064016105df565b611f60611f498280613103565b60800135611f578380613103565b60a001356126b6565b50600554611f7e90600290640100000000900463ffffffff1661377b565b63ffffffff16611f8e8280613103565b608001357ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd611fc060208501856130e2565b611fce906040810190613156565b604051611fdc92919061379f565b60405180910390a360055461200190600190640100000000900463ffffffff1661377b565b63ffffffff166120118280613103565b60a001357ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd61204360208501856130e2565b612051906060810190613156565b60405161205f92919061379f565b60405180910390a360005b6120748280613103565b506002811015610fe4576120888280613103565b604001816002811061209c5761209c613053565b60200201357f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce60405160405180910390a2806120d7816130c9565b91505061206a565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036121a45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016105df565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166122375760405162461bcd60e51b81526004016105df906132ae565b3360006122438561233b565b905060006122508561233b565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156122935760405162461bcd60e51b81526004016105df906132f3565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906122d090849061329b565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612330848a8a8a8a8a612386565b505050505050505050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061237557612375613053565b602090810291909101015292915050565b6001600160a01b0384163b15611a395760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906123ca90899089908890889088906004016137b3565b6020604051808303816000875af1925050508015612405575060408051601f3d908101601f19168201909252612402918101906137ed565b60015b6124b15761241161380a565b806308c379a00361244a5750612425613826565b80612430575061244c565b8060405162461bcd60e51b81526004016105df9190612a04565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016105df565b6001600160e01b0319811663f23a6e6160e01b1461185b5760405162461bcd60e51b81526004016105df906138af565b6001600160a01b0384163b15611a395760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061252590899089908890889088906004016138f7565b6020604051808303816000875af1925050508015612560575060408051601f3d908101601f1916820190925261255d918101906137ed565b60015b61256c5761241161380a565b6001600160e01b0319811663bc197c8160e01b1461185b5760405162461bcd60e51b81526004016105df906138af565b604080516101008101825282516020908101518252835160809081015182840152845160a0908101516001600160a01b031684860152855160c0908101516060808701919091528751870151519386019390935286519095015183015190840152845181015151938301939093528351909201519091015160e08201528151516000919082908190819061262f90610f7a565b600954604051636490cd3d60e11b815293965091945092506001600160a01b03169063c9219a7a9061266b908690869086908a90600401613955565b602060405180830381865afa158015612688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126ac91906139b2565b9695505050505050565b600554600090640100000000900463ffffffff166126f57f00000000000000000000000000000000000000000000000000000000000000006002613ae0565b63ffffffff168163ffffffff16036127685760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b60648201526084016105df565b6000612775600283613af5565b905060006127838686610769565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff16101561284f576127ca600286613b18565b63ffffffff16600003612808578392506127e98163ffffffff16610fe8565b63ffffffff821660009081526003602052604090208590559150612824565b63ffffffff811660009081526003602052604090205492508391505b61282e8383610769565b935061283b600286613af5565b94508061284781613b3b565b91505061278b565b5060055460009060649061286a9063ffffffff166001613b5e565b6128749190613b18565b6005805463ffffffff191663ffffffff8316908117909155600090815260046020526040902085905590506128aa866002613b5e565b6005805463ffffffff929092166401000000000267ffffffff0000000019909216919091179055509394505050505092915050565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b6129146128df565b81526020019060019003908161290c5790505090565b80356001600160a01b038116811461163657600080fd5b6000806040838503121561295457600080fd5b61295d8361292a565b946020939093013593505050565b6001600160e01b031981168114610b5e57600080fd5b60006020828403121561299357600080fd5b813561299e8161296b565b9392505050565b6000602082840312156129b757600080fd5b5035919050565b6000815180845260005b818110156129e4576020818501810151868301820152016129c8565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061299e60208301846129be565b600080600060608486031215612a2c57600080fd5b612a358461292a565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b604081018181106001600160401b0382111715612a7f57612a7f612a4a565b60405250565b601f8201601f191681016001600160401b0381118282101715612aaa57612aaa612a4a565b6040525050565b60405161014081016001600160401b0381118282101715612ad457612ad4612a4a565b60405290565b60405160e081016001600160401b0381118282101715612ad457612ad4612a4a565b60006001600160401b03821115612b1557612b15612a4a565b5060051b60200190565b600082601f830112612b3057600080fd5b81356020612b3d82612afc565b604051612b4a8282612a85565b83815260059390931b8501820192828101915086841115612b6a57600080fd5b8286015b84811015612b855780358352918301918301612b6e565b509695505050505050565b600082601f830112612ba157600080fd5b81356001600160401b03811115612bba57612bba612a4a565b604051612bd1601f8301601f191660200182612a85565b818152846020838601011115612be657600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215612c1b57600080fd5b612c248661292a565b9450612c326020870161292a565b935060408601356001600160401b0380821115612c4e57600080fd5b612c5a89838a01612b1f565b94506060880135915080821115612c7057600080fd5b612c7c89838a01612b1f565b93506080880135915080821115612c9257600080fd5b50612c9f88828901612b90565b9150509295509295909350565b60008060408385031215612cbf57600080fd5b50508035926020909101359150565b60008060408385031215612ce157600080fd5b82356001600160401b0380821115612cf857600080fd5b818501915085601f830112612d0c57600080fd5b81356020612d1982612afc565b604051612d268282612a85565b83815260059390931b8501820192828101915089841115612d4657600080fd5b948201945b83861015612d6b57612d5c8661292a565b82529482019490820190612d4b565b96505086013592505080821115612d8157600080fd5b50612d8e85828601612b1f565b9150509250929050565b600081518084526020808501945080840160005b83811015612dc857815187529582019590820190600101612dac565b509495945050505050565b60208152600061299e6020830184612d98565b600060208284031215612df857600080fd5b81356001600160401b03811115612e0e57600080fd5b82016040818503121561299e57600080fd5b600060208284031215612e3257600080fd5b81356001600160401b03811115612e4857600080fd5b6108ce84828501612b90565b8060005b6002811015612e77578151845260209384019390910190600101612e58565b50505050565b8060005b6002811015612e7757612e95848351612e54565b6040939093019260209190910190600101612e81565b6101008101612eba8286612e54565b612ec76040830185612e7d565b6108ce60c0830184612e54565b8015158114610b5e57600080fd5b60008060408385031215612ef557600080fd5b612efe8361292a565b91506020830135612f0e81612ed4565b809150509250929050565b60008060408385031215612f2c57600080fd5b612f358361292a565b9150612f436020840161292a565b90509250929050565b600080600080600060a08688031215612f6457600080fd5b612f6d8661292a565b9450612f7b6020870161292a565b9350604086013592506060860135915060808601356001600160401b03811115612fa457600080fd5b612c9f88828901612b90565b600060208284031215612fc257600080fd5b61299e8261292a565b600181811c90821680612fdf57607f821691505b602082108103612fff57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60408101818360005b6002811015613091578151835260209283019290910190600101613072565b50505092915050565b6000602082840312156130ac57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016130db576130db6130b3565b5060010190565b6000823561013e198336030181126130f957600080fd5b9190910192915050565b6000823561011e198336030181126130f957600080fd5b6000600160ff1b820161312f5761312f6130b3565b5060000390565b600063ffffffff82168061314c5761314c6130b3565b6000190192915050565b6000808335601e1984360301811261316d57600080fd5b8301803591506001600160401b0382111561318757600080fd5b60200191503681900382131561319c57600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038b811682528a81166020830152604082018a9052606082018990528781166080830152861660a082015261010060c0820181905260009061321883820187896131a3565b905082810360e084015261322d8185876131a3565b9d9c50505050505050505050505050565b600080600080600080600080610100898b03121561325b57600080fd5b505086516020880151604089015160608a015160808b015160a08c015160c08d015160e0909d0151959e949d50929b919a50985090965094509092509050565b8082018082111561060b5761060b6130b3565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006133506040830185612d98565b82810360208401526133628185612d98565b95945050505050565b6000808335601e1984360301811261338257600080fd5b83016020810192503590506001600160401b038111156133a157600080fd5b80360382131561319c57600080fd5b602081526133d1602082016133c48461292a565b6001600160a01b03169052565b6020820135604082015260006133ea604084018461336b565b610140806060860152613402610160860183856131a3565b9250613411606087018761336b565b9250601f198087860301608088015261342b8585846131a3565b94506134396080890161292a565b6001600160a01b03811660a0890152935060a088013560c088015261346060c0890161292a565b6001600160a01b03811660e0890152935061347d60e0890161292a565b93506101009150613498828801856001600160a01b03169052565b6134a48289018961336b565b945091506101208188870301818901526134bf8686856131a3565b95506134cd818a018a61336b565b9550925050808786030183880152506134e78484836131a3565b979650505050505050565b634e487b7160e01b600052601260045260246000fd5b600082613517576135176134f2565b500690565b600082601f83011261352d57600080fd5b60405161353981612a60565b80604084018581111561354b57600080fd5b845b8181101561356557803583526020928301920161354d565b509195945050505050565b6000610140828403121561358357600080fd5b61358b612ab1565b90506135968261292a565b81526020820135602082015260408201356001600160401b03808211156135bc57600080fd5b6135c885838601612b90565b604084015260608401359150808211156135e157600080fd5b6135ed85838601612b90565b60608401526135fe6080850161292a565b608084015260a084013560a084015261361960c0850161292a565b60c084015261362a60e0850161292a565b60e08401526101009150818401358181111561364557600080fd5b61365186828701612b90565b83850152506101209150818401358181111561366c57600080fd5b61367886828701612b90565b8385015250505092915050565b60006040823603121561369757600080fd5b6040516136a381612a60565b82356001600160401b03808211156136ba57600080fd5b818501915061012082360312156136d057600080fd5b6136d8612ada565b8235828111156136e757600080fd5b6136f336828601612b90565b8252506020830135602082015261370d366040850161351c565b604082015261371f366080850161351c565b606082015260c0830135608082015261373a60e0840161292a565b60a082015261010083013560c082015280845250602085013591508082111561376257600080fd5b5061376f36828601613570565b60208301525092915050565b63ffffffff828116828216039080821115613798576137986130b3565b5092915050565b6020815260006108ce6020830184866131a3565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906134e7908301846129be565b6000602082840312156137ff57600080fd5b815161299e8161296b565b600060033d11156138235760046000803e5060005160e01c5b90565b600060443d10156138345790565b6040516003193d81016004833e81513d6001600160401b03816024840111818411171561386357505050505090565b828501915081518181111561387b5750505050505090565b843d87010160208285010111156138955750505050505090565b6138a460208286010187612a85565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a06040820181905260009061392390830186612d98565b82810360608401526139358186612d98565b9050828103608084015261394981856129be565b98975050505050505050565b61020081016139648287612e54565b6139716040830186612e7d565b61397e60c0830185612e54565b61010082018360005b60088110156139a6578151835260209283019290910190600101613987565b50505095945050505050565b6000602082840312156139c457600080fd5b815161299e81612ed4565b600181815b80851115613a0c578163ffffffff048211156139f2576139f26130b3565b808516156139ff57918102915b93841c93908002906139d4565b509250929050565b600082613a235750600161060b565b81613a305750600061060b565b8160018114613a465760028114613a5057613a81565b600191505061060b565b60ff841115613a6157613a616130b3565b6001841b915063ffffffff821115613a7b57613a7b6130b3565b5061060b565b5060208310610133831016604e8410600b8410161715613ab8575081810a63ffffffff811115613ab357613ab36130b3565b61060b565b613ac283836139cf565b8063ffffffff04821115613ad857613ad86130b3565b029392505050565b600063ffffffff6108ce818516828516613a14565b600063ffffffff80841680613b0c57613b0c6134f2565b92169190910492915050565b600063ffffffff80841680613b2f57613b2f6134f2565b92169190910692915050565b600063ffffffff808316818103613b5457613b546130b3565b6001019392505050565b63ffffffff818116838216019080821115613798576137986130b356fe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220e70df6aea8d5ff166f0cf67748054c5412b285bbeee59684ea681643f82f666164736f6c63430008120033";

type ZRC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZRC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZRC1155__factory extends ContractFactory {
  constructor(...args: ZRC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _hasherAddress: PromiseOrValue<string>,
    _verifier: PromiseOrValue<string>,
    _swapExecutor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZRC1155> {
    return super.deploy(
      _hasherAddress,
      _verifier,
      _swapExecutor,
      overrides || {}
    ) as Promise<ZRC1155>;
  }
  override getDeployTransaction(
    _hasherAddress: PromiseOrValue<string>,
    _verifier: PromiseOrValue<string>,
    _swapExecutor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasherAddress,
      _verifier,
      _swapExecutor,
      overrides || {}
    );
  }
  override attach(address: string): ZRC1155 {
    return super.attach(address) as ZRC1155;
  }
  override connect(signer: Signer): ZRC1155__factory {
    return super.connect(signer) as ZRC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZRC1155Interface {
    return new utils.Interface(_abi) as ZRC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZRC1155 {
    return new Contract(address, _abi, signerOrProvider) as ZRC1155;
  }
}
