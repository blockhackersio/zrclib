/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CompliantTransactionVerifier,
  CompliantTransactionVerifierInterface,
} from "../../contracts/CompliantTransactionVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[9]",
        name: "input",
        type: "uint256[9]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type CompliantTransactionVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompliantTransactionVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompliantTransactionVerifier__factory extends ContractFactory {
  constructor(...args: CompliantTransactionVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CompliantTransactionVerifier> {
    return super.deploy(
      overrides || {}
    ) as Promise<CompliantTransactionVerifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CompliantTransactionVerifier {
    return super.attach(address) as CompliantTransactionVerifier;
  }
  override connect(signer: Signer): CompliantTransactionVerifier__factory {
    return super.connect(signer) as CompliantTransactionVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompliantTransactionVerifierInterface {
    return new utils.Interface(_abi) as CompliantTransactionVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompliantTransactionVerifier {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CompliantTransactionVerifier;
  }
}
