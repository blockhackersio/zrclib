/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ZRC20, ZRC20Interface } from "../../contracts/ZRC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_hasherAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapExecutor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "parseProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapExecutor",
    outputs: [
      {
        internalType: "contract SwapExecutor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "proof",
                type: "bytes",
              },
              {
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
              },
              {
                internalType: "bytes32[2]",
                name: "inputNullifiers",
                type: "bytes32[2]",
              },
              {
                internalType: "bytes32[2]",
                name: "outputCommitments",
                type: "bytes32[2]",
              },
              {
                internalType: "uint256",
                name: "publicAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "publicAsset",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "extDataHash",
                type: "bytes32",
              },
            ],
            internalType: "struct AbstractShieldedPool.ProofArguments",
            name: "proofArguments",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "int256",
                name: "extAmount",
                type: "int256",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput1",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput2",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountOutMin",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "swapRecipient",
                type: "address",
              },
              {
                internalType: "address",
                name: "swapRouter",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "swapData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "transactData",
                type: "bytes",
              },
            ],
            internalType: "struct AbstractShieldedPool.ExtData",
            name: "extData",
            type: "tuple",
          },
        ],
        internalType: "struct AbstractShieldedPool.Proof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "proof",
                type: "bytes",
              },
              {
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
              },
              {
                internalType: "bytes32[2]",
                name: "inputNullifiers",
                type: "bytes32[2]",
              },
              {
                internalType: "bytes32[2]",
                name: "outputCommitments",
                type: "bytes32[2]",
              },
              {
                internalType: "uint256",
                name: "publicAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "publicAsset",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "extDataHash",
                type: "bytes32",
              },
            ],
            internalType: "struct AbstractShieldedPool.ProofArguments",
            name: "proofArguments",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "int256",
                name: "extAmount",
                type: "int256",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput1",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput2",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountOutMin",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "swapRecipient",
                type: "address",
              },
              {
                internalType: "address",
                name: "swapRouter",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "swapData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "transactData",
                type: "bytes",
              },
            ],
            internalType: "struct AbstractShieldedPool.ExtData",
            name: "extData",
            type: "tuple",
          },
        ],
        internalType: "struct AbstractShieldedPool.Proof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "transactAndSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract TransactionVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600780546001600160401b0319169055600160f81b6008553480156200002957600080fd5b5060405162003ac038038062003ac08339810160408190526200004c916200096b565b6005838383838360405180604001604052806004815260200163169554d160e21b8152506040518060400160405280600881526020016716995c9bc81554d160c21b8152508160039081620000a2919062000a5a565b506004620000b1828262000a5a565b50505060008263ffffffff16116200011c5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001745760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e2033320000604482015260640162000113565b63ffffffff90911660a0526001600160a01b03908116608052600b80548483166001600160a01b031991821617909155600a805492841692909116919091179055620001bf620001e6565b50505050620001dd620001d76200027e60201b60201c565b62000282565b50505062000b58565b60005b60a05163ffffffff168163ffffffff1610156200023c576200021163ffffffff8216620002d4565b63ffffffff821660009081526005602052604090205580620002338162000b26565b915050620001e9565b5060a051620002519063ffffffff16620002d4565b6000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f855565b3390565b600c80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000816000036200030657507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b816001036200033657507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002036200036657507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003036200039657507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600403620003c657507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600503620003f657507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b816006036200042657507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b816007036200045657507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008036200048657507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600903620004b657507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a03620004e657507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b036200051657507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c036200054657507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d036200057657507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e03620005a657507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f03620005d657507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b816010036200060657507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b816011036200063557507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b816012036200066557507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b816013036200069557507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601403620006c557507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b81601503620006f557507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b816016036200072557507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b816017036200075557507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b816018036200078557507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601903620007b557507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a03620007e557507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b036200081557507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c036200084557507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d036200087557507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e03620008a557507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f03620008d557507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b816020036200090557507f25a90efc49af54a5b7154a6eaba978dcf04796b4984fe54be8d4ea8579e1f1e6919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e647300000000000000000000000000604482015260640162000113565b919050565b80516001600160a01b03811681146200094e57600080fd5b6000806000606084860312156200098157600080fd5b6200098c8462000953565b92506200099c6020850162000953565b9150620009ac6040850162000953565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620009e057607f821691505b60208210810362000a0157634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000a5557600081815260208120601f850160051c8101602086101562000a305750805b601f850160051c820191505b8181101562000a515782815560010162000a3c565b5050505b505050565b81516001600160401b0381111562000a765762000a76620009b5565b62000a8e8162000a878454620009cb565b8462000a07565b602080601f83116001811462000ac6576000841562000aad5750858301515b600019600386901b1c1916600185901b17855562000a51565b600085815260208120601f198616915b8281101562000af75788860151825594840194600190910190840162000ad6565b508582101562000b165787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600063ffffffff80831681810362000b4e57634e487b7160e01b600052601160045260246000fd5b6001019392505050565b60805160a051612f2d62000b93600039600081816103390152818161202001526120de015260008181610521015261074a0152612f2d6000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80637fe24ffe11610125578063cd87a3b4116100ad578063ec7329591161007c578063ec732959146104f5578063ed33639f1461051c578063f178e47c14610543578063f2fde38b14610563578063fc7e9c6f1461057657600080fd5b8063cd87a3b4146104a4578063dd62ed3e146104ac578063e5285dcc146104bf578063e8295588146104e257600080fd5b806395d89b41116100f457806395d89b4114610439578063a457c2d714610441578063a9059cbb14610454578063ba70f75714610467578063c2b40ae41461048457600080fd5b80637fe24ffe146103fc57806384fcec46146104055780638da5cb5b1461041857806390eeb02b1461042957600080fd5b806340c10f19116101a85780636d9833e3116101775780636d9833e31461038357806370a0823114610396578063715018a6146103bf57806375d8498f146103c7578063793deea3146103da57600080fd5b806340c10f191461030a578063414a37ba1461031f5780634ecf518b14610334578063622743291461037057600080fd5b806323b872dd116101ef57806323b872dd146102975780632b7ac3f3146102aa578063313ce567146102d557806338bf282e146102e457806339509351146102f757600080fd5b806306fdde0314610221578063095ea7b31461023f57806317cc915c1461026257806318160ddd14610285575b600080fd5b61022961058e565b604051610236919061227b565b60405180910390f35b61025261024d3660046122e0565b610620565b6040519015158152602001610236565b61025261027036600461230a565b60096020526000908152604090205460ff1681565b6002545b604051908152602001610236565b6102526102a5366004612323565b61063a565b600b546102bd906001600160a01b031681565b6040516001600160a01b039091168152602001610236565b60405160128152602001610236565b6102896102f236600461235f565b61065e565b6102526103053660046122e0565b6107d0565b61031d6103183660046122e0565b6107f2565b005b610289600080516020612ed883398151915281565b61035b7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610236565b61031d61037e366004612381565b610808565b61025261039136600461230a565b610913565b6102896103a43660046123c3565b6001600160a01b031660009081526020819052604090205490565b61031d610991565b61031d6103d5366004612381565b6109a5565b6103ed6103e83660046124f1565b610d33565b60405161023693929190612577565b61028960085481565b600a546102bd906001600160a01b031681565b600c546001600160a01b03166102bd565b60075461035b9063ffffffff1681565b610229610d92565b61025261044f3660046122e0565b610da1565b6102526104623660046122e0565b610e1c565b60075463ffffffff16600090815260066020526040902054610289565b61028961049236600461230a565b60066020526000908152604090205481565b61035b606481565b6102896104ba3660046125a0565b610e2a565b6102526104cd36600461230a565b60009081526009602052604090205460ff1690565b6102896104f036600461230a565b610e55565b6102897f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b6102bd7f000000000000000000000000000000000000000000000000000000000000000081565b61028961055136600461230a565b60056020526000908152604090205481565b61031d6105713660046123c3565b6114a8565b60075461035b90640100000000900463ffffffff1681565b60606003805461059d906125d3565b80601f01602080910402602001604051908101604052809291908181526020018280546105c9906125d3565b80156106165780601f106105eb57610100808354040283529160200191610616565b820191906000526020600020905b8154815290600101906020018083116105f957829003601f168201915b5050505050905090565b60003361062e81858561151e565b60019150505b92915050565b600033610648858285611642565b6106538585856116bc565b506001949350505050565b6000600080516020612ed883398151915283106106c25760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c6460448201526064015b60405180910390fd5b600080516020612ed883398151915282106107295760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b60648201526084016106b9565b610731612230565b8381526020810183905260405163014cf2b360e51b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063299e566090610787908490600401612623565b602060405180830381865afa1580156107a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c89190612654565b949350505050565b60003361062e8185856107e38383610e2a565b6107ed9190612683565b61151e565b6107fa611860565b61080482826118ba565b5050565b60006108176020830183612696565b60200135131561083d5761083b306108326020840184612696565b60200135610e1c565b505b61084681611979565b60006108556020830183612696565b60200135121561091057600061086e6020830183612696565b61087c9060208101906123c3565b6001600160a01b0316036108d25760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f2061646472657373000060448201526064016106b9565b610910306108e36020840184612696565b6108f19060208101906123c3565b6108fe6020850185612696565b6020013561090b906126b7565b6116bc565b50565b600081810361092457506000919050565b60075463ffffffff16805b63ffffffff81166000908152600660205260409020548403610955575060019392505050565b8063ffffffff16600003610967575060645b80610971816126d3565b9150508163ffffffff168163ffffffff160361092f575060009392505050565b610999611860565b6109a36000611e9b565b565b60006109b46020830183612696565b6020013512610a055760405162461bcd60e51b815260206004820152601c60248201527f657874416d6f756e742073686f756c64206265206e656761746976650000000060448201526064016106b9565b6000610a1182806126f3565b610a239061010081019060e0016123c3565b6001600160a01b031603610a795760405162461bcd60e51b815260206004820152601d60248201527f7075626c696341737365742073686f756c64206e6f742062652030783000000060448201526064016106b9565b610a8281611979565b600a546001600160a01b0316610a9b6020830183612696565b610aa99060208101906123c3565b6001600160a01b031614610b0a5760405162461bcd60e51b815260206004820152602260248201527f6f6e6c7920737761704578656375746f722063616e20626520726563697069656044820152611b9d60f21b60648201526084016106b9565b6000610b196020830183612696565b610b2a9060a08101906080016123c3565b6001600160a01b031603610b805760405162461bcd60e51b815260206004820152601a60248201527f746f6b656e4f75742073686f756c64206e6f742062652030783000000000000060448201526064016106b9565b6000610b8f6020830183612696565b60a0013511610bee5760405162461bcd60e51b815260206004820152602560248201527f616d6f756e744f75744d696e2073686f756c6420626520677265617465722074604482015264068616e20360dc1b60648201526084016106b9565b600a546001600160a01b031663a0c6a6ef610c0983806126f3565b610c1b9061010081019060e0016123c3565b610c286020850185612696565b610c399060a08101906080016123c3565b610c466020860186612696565b60200135610c53906126b7565b610c606020870187612696565b60a00135610c716020880188612696565b610c839061010081019060e0016123c3565b610c906020890189612696565b610ca19060e081019060c0016123c3565b610cae60208a018a612696565b610cbd9061010081019061270a565b610cca60208c018c612696565b610cd99061012081019061270a565b6040518b63ffffffff1660e01b8152600401610cfe9a99989796959493929190612781565b600060405180830381600087803b158015610d1857600080fd5b505af1158015610d2c573d6000803e3d6000fd5b5050505050565b610d3b612230565b610d4361224e565b610d4b612230565b83806020019051810190610d5f91906127f3565b895160208b8101518b820193909352928a5281830193909352929092528082019290925291905285015283529193909250565b60606004805461059d906125d3565b60003381610daf8286610e2a565b905083811015610e0f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106b9565b610653828686840361151e565b60003361062e8185856116bc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600081600003610e8657507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b81600103610eb557507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600203610ee457507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600303610f1357507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600403610f4257507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600503610f7157507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b81600603610fa057507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b81600703610fcf57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600803610ffe57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b8160090361102d57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a0361105c57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b0361108b57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c036110ba57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d036110e957507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e0361111857507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f0361114757507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160100361117657507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b816011036111a457507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b816012036111d357507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b8160130361120257507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b8160140361123157507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160150361126057507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160160361128f57507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b816017036112be57507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b816018036112ed57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b8160190361131c57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a0361134b57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b0361137a57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c036113a957507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d036113d857507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e0361140757507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f0361143657507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b8160200361146557507f25a90efc49af54a5b7154a6eaba978dcf04796b4984fe54be8d4ea8579e1f1e6919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b60448201526064016106b9565b919050565b6114b0611860565b6001600160a01b0381166115155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106b9565b61091081611e9b565b6001600160a01b0383166115805760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106b9565b6001600160a01b0382166115e15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106b9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061164e8484610e2a565b905060001981146116b657818110156116a95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106b9565b6116b6848484840361151e565b50505050565b6001600160a01b0383166117205760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106b9565b6001600160a01b0382166117825760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106b9565b6001600160a01b038316600090815260208190526040902054818110156117fa5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106b9565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36116b6565b600c546001600160a01b031633146109a35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106b9565b6001600160a01b0382166119105760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106b9565b80600260008282546119229190612683565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b61198f61198682806126f3565b60200135610913565b6119d15760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081b595c9adb19481c9bdbdd606a1b60448201526064016106b9565b60005b6119de82806126f3565b506002811015611a7b57611a236119f583806126f3565b6040018260028110611a0957611a0961260d565b602002013560009081526009602052604090205460ff1690565b15611a695760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b60448201526064016106b9565b80611a7381612850565b9150506119d4565b50600080516020612ed8833981519152611a986020830183612696565b604051602001611aa891906128af565b6040516020818303038152906040528051906020012060001c611acb9190612a07565b611ad582806126f3565b610100013514611b275760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c206461746120686173680000000060448201526064016106b9565b600854611b33906126b7565b611b406020830183612696565b60200135138015611b625750600854611b5c6020830183612696565b60200135125b611ba65760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b60448201526064016106b9565b611bb7611bb282612b81565b611eed565b611bf35760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b60448201526064016106b9565b60005b611c0082806126f3565b506002811015611c6b57600160096000611c1a85806126f3565b6040018460028110611c2e57611c2e61260d565b6020020135815260200190815260200160002060006101000a81548160ff0219169083151502179055508080611c6390612850565b915050611bf6565b506000611c7b6020830183612696565b602001351215611cf8576000611c946020830183612696565b611ca29060208101906123c3565b6001600160a01b031603611cf85760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f2061646472657373000060448201526064016106b9565b611d1c611d0582806126f3565b60800135611d1383806126f3565b60a00135612007565b50600754611d3a90600290640100000000900463ffffffff16612c74565b63ffffffff16611d4a82806126f3565b608001357ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd611d7c6020850185612696565b611d8a90604081019061270a565b604051611d98929190612c98565b60405180910390a3600754611dbd90600190640100000000900463ffffffff16612c74565b63ffffffff16611dcd82806126f3565b60a001357ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd611dff6020850185612696565b611e0d90606081019061270a565b604051611e1b929190612c98565b60405180910390a360005b611e3082806126f3565b50600281101561080457611e4482806126f3565b6040018160028110611e5857611e5861260d565b60200201357f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce60405160405180910390a280611e9381612850565b915050611e26565b600c80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516101008101825282516020908101518252835160809081015182840152845160a0908101516001600160a01b031684860152855160c0908101516060808701919091528751870151519386019390935286519095015183015190840152845181015151938301939093528351909201519091015160e082015281515160009190829081908190611f8090610d33565b600b54604051636490cd3d60e11b815293965091945092506001600160a01b03169063c9219a7a90611fbc908690869086908a90600401612cac565b602060405180830381865afa158015611fd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ffd9190612d09565b9695505050505050565b600754600090640100000000900463ffffffff166120467f00000000000000000000000000000000000000000000000000000000000000006002612e3c565b63ffffffff168163ffffffff16036120b95760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b60648201526084016106b9565b60006120c6600283612e51565b905060006120d4868661065e565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff1610156121a05761211b600286612e74565b63ffffffff166000036121595783925061213a8163ffffffff16610e55565b63ffffffff821660009081526005602052604090208590559150612175565b63ffffffff811660009081526005602052604090205492508391505b61217f838361065e565b935061218c600286612e51565b94508061219881612e97565b9150506120dc565b506007546000906064906121bb9063ffffffff166001612eba565b6121c59190612e74565b6007805463ffffffff191663ffffffff8316908117909155600090815260066020526040902085905590506121fb866002612eba565b6007805463ffffffff929092166401000000000267ffffffff0000000019909216919091179055509394505050505092915050565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b612265612230565b81526020019060019003908161225d5790505090565b600060208083528351808285015260005b818110156122a85785810183015185820160400152820161228c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146114a357600080fd5b600080604083850312156122f357600080fd5b6122fc836122c9565b946020939093013593505050565b60006020828403121561231c57600080fd5b5035919050565b60008060006060848603121561233857600080fd5b612341846122c9565b925061234f602085016122c9565b9150604084013590509250925092565b6000806040838503121561237257600080fd5b50508035926020909101359150565b60006020828403121561239357600080fd5b813567ffffffffffffffff8111156123aa57600080fd5b8201604081850312156123bc57600080fd5b9392505050565b6000602082840312156123d557600080fd5b6123bc826122c9565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715612417576124176123de565b60405290565b604051610140810167ffffffffffffffff81118282101715612417576124176123de565b60405160e0810167ffffffffffffffff81118282101715612417576124176123de565b600082601f83011261247557600080fd5b813567ffffffffffffffff80821115612490576124906123de565b604051601f8301601f19908116603f011681019082821181831017156124b8576124b86123de565b816040528381528660208588010111156124d157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561250357600080fd5b813567ffffffffffffffff81111561251a57600080fd5b6107c884828501612464565b8060005b60028110156116b657815184526020938401939091019060010161252a565b8060005b60028110156116b657612561848351612526565b604093909301926020919091019060010161254d565b61010081016125868286612526565b6125936040830185612549565b6107c860c0830184612526565b600080604083850312156125b357600080fd5b6125bc836122c9565b91506125ca602084016122c9565b90509250929050565b600181811c908216806125e757607f821691505b60208210810361260757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60408101818360005b600281101561264b57815183526020928301929091019060010161262c565b50505092915050565b60006020828403121561266657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106345761063461266d565b6000823561013e198336030181126126ad57600080fd5b9190910192915050565b6000600160ff1b82016126cc576126cc61266d565b5060000390565b600063ffffffff8216806126e9576126e961266d565b6000190192915050565b6000823561011e198336030181126126ad57600080fd5b6000808335601e1984360301811261272157600080fd5b83018035915067ffffffffffffffff82111561273c57600080fd5b60200191503681900382131561275157600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038b811682528a81166020830152604082018a9052606082018990528781166080830152861660a082015261010060c082018190526000906127cd8382018789612758565b905082810360e08401526127e2818587612758565b9d9c50505050505050505050505050565b600080600080600080600080610100898b03121561281057600080fd5b505086516020880151604089015160608a015160808b015160a08c015160c08d015160e0909d0151959e949d50929b919a50985090965094509092509050565b6000600182016128625761286261266d565b5060010190565b6000808335601e1984360301811261288057600080fd5b830160208101925035905067ffffffffffffffff8111156128a057600080fd5b80360382131561275157600080fd5b602081526128d0602082016128c3846122c9565b6001600160a01b03169052565b6020820135604082015260006128e96040840184612869565b61014080606086015261290161016086018385612758565b92506129106060870187612869565b9250601f198087860301608088015261292a858584612758565b9450612938608089016122c9565b6001600160a01b03811660a0890152935060a088013560c088015261295f60c089016122c9565b6001600160a01b03811660e0890152935061297c60e089016122c9565b93506101009150612997828801856001600160a01b03169052565b6129a382890189612869565b945091506101208188870301818901526129be868685612758565b95506129cc818a018a612869565b9550925050808786030183880152506129e6848483612758565b979650505050505050565b634e487b7160e01b600052601260045260246000fd5b600082612a1657612a166129f1565b500690565b600082601f830112612a2c57600080fd5b612a346123f4565b806040840185811115612a4657600080fd5b845b81811015612a60578035845260209384019301612a48565b509095945050505050565b60006101408284031215612a7e57600080fd5b612a8661241d565b9050612a91826122c9565b815260208201356020820152604082013567ffffffffffffffff80821115612ab857600080fd5b612ac485838601612464565b60408401526060840135915080821115612add57600080fd5b612ae985838601612464565b6060840152612afa608085016122c9565b608084015260a084013560a0840152612b1560c085016122c9565b60c0840152612b2660e085016122c9565b60e084015261010091508184013581811115612b4157600080fd5b612b4d86828701612464565b838501525061012091508184013581811115612b6857600080fd5b612b7486828701612464565b8385015250505092915050565b600060408236031215612b9357600080fd5b612b9b6123f4565b823567ffffffffffffffff80821115612bb357600080fd5b81850191506101208236031215612bc957600080fd5b612bd1612441565b823582811115612be057600080fd5b612bec36828601612464565b82525060208301356020820152612c063660408501612a1b565b6040820152612c183660808501612a1b565b606082015260c08301356080820152612c3360e084016122c9565b60a082015261010083013560c0820152808452506020850135915080821115612c5b57600080fd5b50612c6836828601612a6b565b60208301525092915050565b63ffffffff828116828216039080821115612c9157612c9161266d565b5092915050565b6020815260006107c8602083018486612758565b6102008101612cbb8287612526565b612cc86040830186612549565b612cd560c0830185612526565b61010082018360005b6008811015612cfd578151835260209283019290910190600101612cde565b50505095945050505050565b600060208284031215612d1b57600080fd5b815180151581146123bc57600080fd5b600181815b80851115612d68578163ffffffff04821115612d4e57612d4e61266d565b80851615612d5b57918102915b93841c9390800290612d30565b509250929050565b600082612d7f57506001610634565b81612d8c57506000610634565b8160018114612da25760028114612dac57612ddd565b6001915050610634565b60ff841115612dbd57612dbd61266d565b6001841b915063ffffffff821115612dd757612dd761266d565b50610634565b5060208310610133831016604e8410600b8410161715612e14575081810a63ffffffff811115612e0f57612e0f61266d565b610634565b612e1e8383612d2b565b8063ffffffff04821115612e3457612e3461266d565b029392505050565b600063ffffffff6107c8818516828516612d70565b600063ffffffff80841680612e6857612e686129f1565b92169190910492915050565b600063ffffffff80841680612e8b57612e8b6129f1565b92169190910692915050565b600063ffffffff808316818103612eb057612eb061266d565b6001019392505050565b63ffffffff818116838216019080821115612c9157612c9161266d56fe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220b830e587b6047c4c69bf665adcf72d2c5e8de0845089a57a209b06433e97063864736f6c63430008120033";

type ZRC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZRC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZRC20__factory extends ContractFactory {
  constructor(...args: ZRC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _hasherAddress: PromiseOrValue<string>,
    _verifier: PromiseOrValue<string>,
    _swapExecutor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZRC20> {
    return super.deploy(
      _hasherAddress,
      _verifier,
      _swapExecutor,
      overrides || {}
    ) as Promise<ZRC20>;
  }
  override getDeployTransaction(
    _hasherAddress: PromiseOrValue<string>,
    _verifier: PromiseOrValue<string>,
    _swapExecutor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasherAddress,
      _verifier,
      _swapExecutor,
      overrides || {}
    );
  }
  override attach(address: string): ZRC20 {
    return super.attach(address) as ZRC20;
  }
  override connect(signer: Signer): ZRC20__factory {
    return super.connect(signer) as ZRC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZRC20Interface {
    return new utils.Interface(_abi) as ZRC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ZRC20 {
    return new Contract(address, _abi, signerOrProvider) as ZRC20;
  }
}
