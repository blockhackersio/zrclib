/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DefiantPool,
  DefiantPoolInterface,
} from "../../contracts/DefiantPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_hasherAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapExecutor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "proof",
                type: "bytes",
              },
              {
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
              },
              {
                internalType: "bytes32[2]",
                name: "inputNullifiers",
                type: "bytes32[2]",
              },
              {
                internalType: "bytes32[2]",
                name: "outputCommitments",
                type: "bytes32[2]",
              },
              {
                internalType: "uint256",
                name: "publicAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "publicAsset",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "extDataHash",
                type: "bytes32",
              },
            ],
            internalType: "struct ShieldedPool.ProofArguments",
            name: "proofArguments",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "int256",
                name: "extAmount",
                type: "int256",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput1",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput2",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountOutMin",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "swapRecipient",
                type: "address",
              },
              {
                internalType: "address",
                name: "swapRouter",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "swapData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "transactData",
                type: "bytes",
              },
            ],
            internalType: "struct ShieldedPool.ExtData",
            name: "extData",
            type: "tuple",
          },
        ],
        internalType: "struct ShieldedPool.Proof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "parseProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapExecutor",
    outputs: [
      {
        internalType: "contract SwapExecutor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "proof",
                type: "bytes",
              },
              {
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
              },
              {
                internalType: "bytes32[2]",
                name: "inputNullifiers",
                type: "bytes32[2]",
              },
              {
                internalType: "bytes32[2]",
                name: "outputCommitments",
                type: "bytes32[2]",
              },
              {
                internalType: "uint256",
                name: "publicAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "publicAsset",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "extDataHash",
                type: "bytes32",
              },
            ],
            internalType: "struct ShieldedPool.ProofArguments",
            name: "proofArguments",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "int256",
                name: "extAmount",
                type: "int256",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput1",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput2",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountOutMin",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "swapRecipient",
                type: "address",
              },
              {
                internalType: "address",
                name: "swapRouter",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "swapData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "transactData",
                type: "bytes",
              },
            ],
            internalType: "struct ShieldedPool.ExtData",
            name: "extData",
            type: "tuple",
          },
        ],
        internalType: "struct ShieldedPool.Proof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "proof",
                type: "bytes",
              },
              {
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
              },
              {
                internalType: "bytes32[2]",
                name: "inputNullifiers",
                type: "bytes32[2]",
              },
              {
                internalType: "bytes32[2]",
                name: "outputCommitments",
                type: "bytes32[2]",
              },
              {
                internalType: "uint256",
                name: "publicAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "publicAsset",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "extDataHash",
                type: "bytes32",
              },
            ],
            internalType: "struct ShieldedPool.ProofArguments",
            name: "proofArguments",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "int256",
                name: "extAmount",
                type: "int256",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput1",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput2",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountOutMin",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "swapRecipient",
                type: "address",
              },
              {
                internalType: "address",
                name: "swapRouter",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "swapData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "transactData",
                type: "bytes",
              },
            ],
            internalType: "struct ShieldedPool.ExtData",
            name: "extData",
            type: "tuple",
          },
        ],
        internalType: "struct ShieldedPool.Proof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "transactAndSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract TransactionVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "proof",
                type: "bytes",
              },
              {
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
              },
              {
                internalType: "bytes32[2]",
                name: "inputNullifiers",
                type: "bytes32[2]",
              },
              {
                internalType: "bytes32[2]",
                name: "outputCommitments",
                type: "bytes32[2]",
              },
              {
                internalType: "uint256",
                name: "publicAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "publicAsset",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "extDataHash",
                type: "bytes32",
              },
            ],
            internalType: "struct ShieldedPool.ProofArguments",
            name: "proofArguments",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "int256",
                name: "extAmount",
                type: "int256",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput1",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput2",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountOutMin",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "swapRecipient",
                type: "address",
              },
              {
                internalType: "address",
                name: "swapRouter",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "swapData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "transactData",
                type: "bytes",
              },
            ],
            internalType: "struct ShieldedPool.ExtData",
            name: "extData",
            type: "tuple",
          },
        ],
        internalType: "struct ShieldedPool.Proof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600280546001600160401b0319169055600160f81b6003553480156200002957600080fd5b5060405162003077380380620030778339810160408190526200004c9162000841565b6005838383838362000062565b60405180910390fd5b60208263ffffffff1610620000ba5760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e2033320000604482015260640162000059565b63ffffffff90911660a0526001600160a01b03908116608052600580548483166001600160a01b03199182161790915560068054928416929091169190911790556200010562000112565b50505050505050620008bd565b60005b60a05163ffffffff168163ffffffff16101562000168576200013d63ffffffff8216620001aa565b63ffffffff8216600090815260208190526040902055806200015f816200088b565b91505062000115565b5060a0516200017d9063ffffffff16620001aa565b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4955565b600081600003620001dc57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b816001036200020c57507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002036200023c57507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003036200026c57507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b816004036200029c57507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600503620002cc57507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b81600603620002fc57507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b816007036200032c57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008036200035c57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b816009036200038c57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a03620003bc57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b03620003ec57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c036200041c57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d036200044c57507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e036200047c57507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f03620004ac57507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b81601003620004dc57507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b816011036200050b57507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b816012036200053b57507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b816013036200056b57507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b816014036200059b57507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b81601503620005cb57507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b81601603620005fb57507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b816017036200062b57507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b816018036200065b57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b816019036200068b57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a03620006bb57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b03620006eb57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c036200071b57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d036200074b57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e036200077b57507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f03620007ab57507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b81602003620007db57507f25a90efc49af54a5b7154a6eaba978dcf04796b4984fe54be8d4ea8579e1f1e6919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e647300000000000000000000000000604482015260640162000059565b919050565b80516001600160a01b03811681146200082457600080fd5b6000806000606084860312156200085757600080fd5b620008628462000829565b9250620008726020850162000829565b9150620008826040850162000829565b90509250925092565b600063ffffffff808316818103620008b357634e487b7160e01b600052601160045260246000fd5b6001019392505050565b60805160a05161277f620008f8600039600081816101fb01528181611bdd0152611c9a0152600081816103da0152610520015261277f6000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806390eeb02b116100c3578063e5285dcc1161007c578063e5285dcc14610378578063e82955881461039b578063ec732959146103ae578063ed33639f146103d5578063f178e47c146103fc578063fc7e9c6f1461041c57600080fd5b806390eeb02b146102be578063b02c43d0146102ce578063b4f741b514610320578063ba70f75714610333578063c2b40ae414610350578063cd87a3b41461037057600080fd5b80636d9833e3116101155780636d9833e31461024757806375d8498f1461025a57806377a299721461026d578063793deea3146102805780637fe24ffe146102a257806384fcec46146102ab57600080fd5b806317cc915c1461015d5780632b7ac3f31461019557806338bf282e146101c0578063414a37ba146101e15780634ecf518b146101f65780636227432914610232575b600080fd5b61018061016b366004611e37565b60046020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6005546101a8906001600160a01b031681565b6040516001600160a01b03909116815260200161018c565b6101d36101ce366004611e50565b610434565b60405190815260200161018c565b6101d360008051602061272a83398151915281565b61021d7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161018c565b610245610240366004611e72565b6105a8565b005b610180610255366004611e37565b610608565b610245610268366004611e72565b610686565b61024561027b366004611e72565b610a14565b61029361028e366004611eca565b610a9e565b60405161018c93929190611ff5565b6101d360035481565b6006546101a8906001600160a01b031681565b60025461021d9063ffffffff1681565b6103016102dc366004611e37565b600960205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b03909316835260208301919091520161018c565b61024561032e366004611e72565b610afd565b60025463ffffffff166000908152600160205260409020546101d3565b6101d361035e366004611e37565b60016020526000908152604090205481565b61021d606481565b610180610386366004611e37565b60009081526004602052604090205460ff1690565b6101d36103a9366004611e37565b610c9d565b6101d37f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b6101a87f000000000000000000000000000000000000000000000000000000000000000081565b6101d361040a366004611e37565b60006020819052908152604090205481565b60025461021d90640100000000900463ffffffff1681565b600060008051602061272a83398151915283106104985760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c6460448201526064015b60405180910390fd5b60008051602061272a83398151915282106104ff5760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b606482015260840161048f565b610507611dec565b8381526020810183905260405163014cf2b360e51b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063299e56609061055d90849060040161203c565b602060405180830381865afa15801561057a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059e919061206d565b9150505b92915050565b6105b56020820182612086565b60200135156105fc5760405162461bcd60e51b81526020600482015260136024820152720657874416d6f756e74206d757374206265203606c1b604482015260640161048f565b610605816112f0565b50565b600081810361061957506000919050565b60025463ffffffff16805b63ffffffff8116600090815260016020526040902054840361064a575060019392505050565b8063ffffffff1660000361065c575060645b80610666816120bd565b9150508163ffffffff168163ffffffff1603610624575060009392505050565b60006106956020830183612086565b60200135126106e65760405162461bcd60e51b815260206004820152601c60248201527f657874416d6f756e742073686f756c64206265206e6567617469766500000000604482015260640161048f565b60006106f282806120dd565b6107049061010081019060e00161210b565b6001600160a01b03160361075a5760405162461bcd60e51b815260206004820152601d60248201527f7075626c696341737365742073686f756c64206e6f7420626520307830000000604482015260640161048f565b610763816112f0565b6006546001600160a01b031661077c6020830183612086565b61078a90602081019061210b565b6001600160a01b0316146107eb5760405162461bcd60e51b815260206004820152602260248201527f6f6e6c7920737761704578656375746f722063616e20626520726563697069656044820152611b9d60f21b606482015260840161048f565b60006107fa6020830183612086565b61080b9060a081019060800161210b565b6001600160a01b0316036108615760405162461bcd60e51b815260206004820152601a60248201527f746f6b656e4f75742073686f756c64206e6f7420626520307830000000000000604482015260640161048f565b60006108706020830183612086565b60a00135116108cf5760405162461bcd60e51b815260206004820152602560248201527f616d6f756e744f75744d696e2073686f756c6420626520677265617465722074604482015264068616e20360dc1b606482015260840161048f565b6006546001600160a01b031663a0c6a6ef6108ea83806120dd565b6108fc9061010081019060e00161210b565b6109096020850185612086565b61091a9060a081019060800161210b565b6109276020860186612086565b6020013561093490612126565b6109416020870187612086565b60a001356109526020880188612086565b6109649061010081019060e00161210b565b6109716020890189612086565b6109829060e081019060c00161210b565b61098f60208a018a612086565b61099e90610100810190612142565b6109ab60208c018c612086565b6109ba90610120810190612142565b6040518b63ffffffff1660e01b81526004016109df9a999897969594939291906121b9565b600060405180830381600087803b1580156109f957600080fd5b505af1158015610a0d573d6000803e3d6000fd5b5050505050565b33336000610a256020850185612086565b6020013513610a765760405162461bcd60e51b815260206004820152601b60248201527f65787420616d6f756e74206d75737420626520706f7369746976650000000000604482015260640161048f565b610a9081610a876020860186612086565b60200135611912565b610a99836112f0565b505050565b610aa6611dec565b610aae611e0a565b610ab6611dec565b83806020019051810190610aca919061222b565b895160208b8101518b820193909352928a5281830193909352929092528082019290925291905285015283529193909250565b336000610b0d6020840184612086565b6020013512610b5e5760405162461bcd60e51b815260206004820152601a60248201527f657874416d6f756e74206d757374206265206e65676174697665000000000000604482015260640161048f565b610b67826112f0565b6000610b766020840184612086565b60200135610b8390612126565b9050600080610b9183611978565b91509150610b9e81611b0c565b60005b610bac600183612288565b61ffff16811015610c9557828181518110610bc957610bc9612026565b6020026020010151600001516001600160a01b031663a9059cbb878060200190610bf39190612086565b610c0190602081019061210b565b858481518110610c1357610c13612026565b6020026020010151602001516040518363ffffffff1660e01b8152600401610c509291906001600160a01b03929092168252602082015260400190565b600060405180830381600087803b158015610c6a57600080fd5b505af1158015610c7e573d6000803e3d6000fd5b505050508080610c8d906122aa565b915050610ba1565b505050505050565b600081600003610cce57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b81600103610cfd57507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600203610d2c57507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600303610d5b57507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600403610d8a57507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600503610db957507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b81600603610de857507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b81600703610e1757507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600803610e4657507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600903610e7557507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a03610ea457507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b03610ed357507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c03610f0257507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d03610f3157507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e03610f6057507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f03610f8f57507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b81601003610fbe57507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b81601103610fec57507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b8160120361101b57507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b8160130361104a57507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b8160140361107957507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b816015036110a857507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b816016036110d757507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b8160170361110657507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b8160180361113557507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b8160190361116457507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a0361119357507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b036111c257507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c036111f157507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d0361122057507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e0361124f57507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f0361127e57507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b816020036112ad57507f25a90efc49af54a5b7154a6eaba978dcf04796b4984fe54be8d4ea8579e1f1e6919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015260640161048f565b919050565b6113066112fd82806120dd565b60200135610608565b6113485760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081b595c9adb19481c9bdbdd606a1b604482015260640161048f565b60005b61135582806120dd565b5060028110156113f25761139a61136c83806120dd565b604001826002811061138057611380612026565b602002013560009081526004602052604090205460ff1690565b156113e05760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b604482015260640161048f565b806113ea816122aa565b91505061134b565b5060008051602061272a83398151915261140f6020830183612086565b60405160200161141f9190612309565b6040516020818303038152906040528051906020012060001c6114429190612461565b61144c82806120dd565b61010001351461149e5760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c2064617461206861736800000000604482015260640161048f565b6003546114aa90612126565b6114b76020830183612086565b602001351380156114d957506003546114d36020830183612086565b60200135125b61151d5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b604482015260640161048f565b6040805161010081019091526000908061153784806120dd565b60209081013582520161154a84806120dd565b60c00135815260200161155d84806120dd565b61156f9061010081019060e00161210b565b6001600160a01b0316815260200161158784806120dd565b6101000135815260200161159b84806120dd565b6040013581526020016115ae84806120dd565b6060013581526020016115c184806120dd565b6080013581526020016115d484806120dd565b60a001359052905061162f6115e983806120dd565b6115f39080612142565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250859250611b2a915050565b61166b5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b604482015260640161048f565b60005b61167883806120dd565b5060028110156116e35760016004600061169286806120dd565b60400184600281106116a6576116a6612026565b6020020135815260200190815260200160002060006101000a81548160ff02191690831515021790555080806116db906122aa565b91505061166e565b5060006116f36020840184612086565b60200135121561177057600061170c6020840184612086565b61171a90602081019061210b565b6001600160a01b0316036117705760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f20616464726573730000604482015260640161048f565b61179461177d83806120dd565b6080013561178b84806120dd565b60a00135611bc0565b50600280546117b19190640100000000900463ffffffff16612475565b63ffffffff166117c183806120dd565b608001357ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd6117f36020860186612086565b611801906040810190612142565b60405161180f929190612492565b60405180910390a360025461183490600190640100000000900463ffffffff16612475565b63ffffffff1661184483806120dd565b60a001357ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd6118766020860186612086565b611884906060810190612142565b604051611892929190612492565b60405180910390a360005b6118a783806120dd565b506002811015610a99576118bb83806120dd565b60400181600281106118cf576118cf612026565b60200201357f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce60405160405180910390a28061190a816122aa565b91505061189d565b6040805180820182526001600160a01b03848116825260208083018581526008805460009081526009909352948220935184546001600160a01b031916931692909217835590516001909201919091558154919061196f836122aa565b91905055505050565b600754600854604080516064808252610ca0820190925260609360009386939192909185918291816020015b60408051808201909152600080825260208201528152602001906001900390816119a45790505090505b6000851180156119ea5750826119e861ffff8416866124a6565b105b15611aa457606461ffff831610611a0057600080fd5b6000611a108561ffff85166124a6565b600081815260096020908152604091829020825180840190935280546001600160a01b0316835260010154908201819052919250908711611a5b576020810196909652600095611a6d565b6020810151611a6a90886124b9565b96505b80838561ffff1681518110611a8457611a84612026565b60200260200101819052508380611a9a906124cc565b94505050506119ce565b8415611af25760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e742062616c616e636520696e20706f6f6c00000000604482015260640161048f565b80611afe8360016124ed565b965096505050505050915091565b8061ffff1660076000828254611b2291906124a6565b909155505050565b600080600080611b3986610a9e565b600554604051636490cd3d60e11b815293965091945092506001600160a01b03169063c9219a7a90611b75908690869086908b90600401612508565b602060405180830381865afa158015611b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb69190612565565b9695505050505050565b6002805460009164010000000090910463ffffffff1690611c02907f000000000000000000000000000000000000000000000000000000000000000090612698565b63ffffffff168163ffffffff1603611c755760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b606482015260840161048f565b6000611c826002836126ad565b90506000611c908686610434565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015611d5c57611cd76002866126d0565b63ffffffff16600003611d1557839250611cf68163ffffffff16610c9d565b63ffffffff821660009081526020819052604090208590559150611d31565b63ffffffff811660009081526020819052604090205492508391505b611d3b8383610434565b9350611d486002866126ad565b945080611d54816126f3565b915050611c98565b50600254600090606490611d779063ffffffff16600161270c565b611d8191906126d0565b6002805463ffffffff191663ffffffff831690811782556000908152600160205260409020869055909150611db790879061270c565b6002805463ffffffff929092166401000000000267ffffffff0000000019909216919091179055509394505050505092915050565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b611e21611dec565b815260200190600190039081611e195790505090565b600060208284031215611e4957600080fd5b5035919050565b60008060408385031215611e6357600080fd5b50508035926020909101359150565b600060208284031215611e8457600080fd5b813567ffffffffffffffff811115611e9b57600080fd5b820160408185031215611ead57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215611edc57600080fd5b813567ffffffffffffffff80821115611ef457600080fd5b818401915084601f830112611f0857600080fd5b813581811115611f1a57611f1a611eb4565b604051601f8201601f19908116603f01168101908382118183101715611f4257611f42611eb4565b81604052828152876020848701011115611f5b57600080fd5b826020860160208301376000928101602001929092525095945050505050565b8060005b6002811015611f9e578151845260209384019390910190600101611f7f565b50505050565b806000805b6002808210611fb85750610a0d565b835186845b83811015611fdb578251825260209283019290910190600101611fbd565b505050604095909501945060209290920191600101611fa9565b61010081016120048286611f7b565b6120116040830185611fa4565b61201e60c0830184611f7b565b949350505050565b634e487b7160e01b600052603260045260246000fd5b60408101818360005b6002811015612064578151835260209283019290910190600101612045565b50505092915050565b60006020828403121561207f57600080fd5b5051919050565b6000823561013e1983360301811261209d57600080fd5b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff8216806120d3576120d36120a7565b6000190192915050565b6000823561011e1983360301811261209d57600080fd5b80356001600160a01b03811681146112eb57600080fd5b60006020828403121561211d57600080fd5b611ead826120f4565b6000600160ff1b820161213b5761213b6120a7565b5060000390565b6000808335601e1984360301811261215957600080fd5b83018035915067ffffffffffffffff82111561217457600080fd5b60200191503681900382131561218957600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038b811682528a81166020830152604082018a9052606082018990528781166080830152861660a082015261010060c082018190526000906122058382018789612190565b905082810360e084015261221a818587612190565b9d9c50505050505050505050505050565b600080600080600080600080610100898b03121561224857600080fd5b505086516020880151604089015160608a015160808b015160a08c015160c08d015160e0909d0151959e949d50929b919a50985090965094509092509050565b61ffff8281168282160390808211156122a3576122a36120a7565b5092915050565b6000600182016122bc576122bc6120a7565b5060010190565b6000808335601e198436030181126122da57600080fd5b830160208101925035905067ffffffffffffffff8111156122fa57600080fd5b80360382131561218957600080fd5b6020815261232a6020820161231d846120f4565b6001600160a01b03169052565b60208201356040820152600061234360408401846122c3565b61014080606086015261235b61016086018385612190565b925061236a60608701876122c3565b9250601f1980878603016080880152612384858584612190565b9450612392608089016120f4565b6001600160a01b03811660a0890152935060a088013560c08801526123b960c089016120f4565b6001600160a01b03811660e089015293506123d660e089016120f4565b935061010091506123f1828801856001600160a01b03169052565b6123fd828901896122c3565b94509150610120818887030181890152612418868685612190565b9550612426818a018a6122c3565b955092505080878603018388015250612440848483612190565b979650505050505050565b634e487b7160e01b600052601260045260246000fd5b6000826124705761247061244b565b500690565b63ffffffff8281168282160390808211156122a3576122a36120a7565b60208152600061201e602083018486612190565b808201808211156105a2576105a26120a7565b818103818111156105a2576105a26120a7565b600061ffff8083168181036124e3576124e36120a7565b6001019392505050565b61ffff8181168382160190808211156122a3576122a36120a7565b61020081016125178287611f7b565b6125246040830186611fa4565b61253160c0830185611f7b565b61010082018360005b600881101561255957815183526020928301929091019060010161253a565b50505095945050505050565b60006020828403121561257757600080fd5b81518015158114611ead57600080fd5b600181815b808511156125c4578163ffffffff048211156125aa576125aa6120a7565b808516156125b757918102915b93841c939080029061258c565b509250929050565b6000826125db575060016105a2565b816125e8575060006105a2565b81600181146125fe576002811461260857612639565b60019150506105a2565b60ff841115612619576126196120a7565b6001841b915063ffffffff821115612633576126336120a7565b506105a2565b5060208310610133831016604e8410600b8410161715612670575081810a63ffffffff81111561266b5761266b6120a7565b6105a2565b61267a8383612587565b8063ffffffff04821115612690576126906120a7565b029392505050565b600063ffffffff61059e8185168285166125cc565b600063ffffffff808416806126c4576126c461244b565b92169190910492915050565b600063ffffffff808416806126e7576126e761244b565b92169190910692915050565b600063ffffffff8083168181036124e3576124e36120a7565b63ffffffff8181168382160190808211156122a3576122a36120a756fe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220b98f4af9b5902f2d3ba7898084628e670d460f33a344bdc2d507f5851fae09ab64736f6c63430008120033";

type DefiantPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DefiantPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DefiantPool__factory extends ContractFactory {
  constructor(...args: DefiantPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _hasherAddress: PromiseOrValue<string>,
    _verifier: PromiseOrValue<string>,
    _swapExecutor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DefiantPool> {
    return super.deploy(
      _hasherAddress,
      _verifier,
      _swapExecutor,
      overrides || {}
    ) as Promise<DefiantPool>;
  }
  override getDeployTransaction(
    _hasherAddress: PromiseOrValue<string>,
    _verifier: PromiseOrValue<string>,
    _swapExecutor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasherAddress,
      _verifier,
      _swapExecutor,
      overrides || {}
    );
  }
  override attach(address: string): DefiantPool {
    return super.attach(address) as DefiantPool;
  }
  override connect(signer: Signer): DefiantPool__factory {
    return super.connect(signer) as DefiantPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DefiantPoolInterface {
    return new utils.Interface(_abi) as DefiantPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DefiantPool {
    return new Contract(address, _abi, signerOrProvider) as DefiantPool;
  }
}
