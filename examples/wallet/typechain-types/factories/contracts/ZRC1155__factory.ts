/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ZRC1155, ZRC1155Interface } from "../../contracts/ZRC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_hasherAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapExecutor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "parseProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapExecutor",
    outputs: [
      {
        internalType: "contract SwapExecutor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "proof",
                type: "bytes",
              },
              {
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
              },
              {
                internalType: "bytes32[2]",
                name: "inputNullifiers",
                type: "bytes32[2]",
              },
              {
                internalType: "bytes32[2]",
                name: "outputCommitments",
                type: "bytes32[2]",
              },
              {
                internalType: "uint256",
                name: "publicAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "publicAsset",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "extDataHash",
                type: "bytes32",
              },
            ],
            internalType: "struct ShieldedPool.ProofArguments",
            name: "proofArguments",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "int256",
                name: "extAmount",
                type: "int256",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput1",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput2",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountOutMin",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "swapRecipient",
                type: "address",
              },
              {
                internalType: "address",
                name: "swapRouter",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "swapData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "transactData",
                type: "bytes",
              },
            ],
            internalType: "struct ShieldedPool.ExtData",
            name: "extData",
            type: "tuple",
          },
        ],
        internalType: "struct ShieldedPool.Proof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "proof",
                type: "bytes",
              },
              {
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
              },
              {
                internalType: "bytes32[2]",
                name: "inputNullifiers",
                type: "bytes32[2]",
              },
              {
                internalType: "bytes32[2]",
                name: "outputCommitments",
                type: "bytes32[2]",
              },
              {
                internalType: "uint256",
                name: "publicAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "publicAsset",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "extDataHash",
                type: "bytes32",
              },
            ],
            internalType: "struct ShieldedPool.ProofArguments",
            name: "proofArguments",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "int256",
                name: "extAmount",
                type: "int256",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput1",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "encryptedOutput2",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountOutMin",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "swapRecipient",
                type: "address",
              },
              {
                internalType: "address",
                name: "swapRouter",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "swapData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "transactData",
                type: "bytes",
              },
            ],
            internalType: "struct ShieldedPool.ExtData",
            name: "extData",
            type: "tuple",
          },
        ],
        internalType: "struct ShieldedPool.Proof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "transactAndSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract TransactionVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600580546001600160401b0319169055600160f81b6006553480156200002957600080fd5b50604051620044f1380380620044f18339810160408190526200004c916200093e565b60058383838383604051806020016040528060008152506200007481620001a760201b60201c565b5060008263ffffffff1611620000dd5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001355760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000d4565b63ffffffff90911660a0526001600160a01b03908116608052600880548483166001600160a01b031991821617909155600980549284169290911691909117905562000180620001b9565b505050506200019e620001986200025160201b60201c565b62000255565b50505062000b2b565b6002620001b5828262000a2d565b5050565b60005b60a05163ffffffff168163ffffffff1610156200020f57620001e463ffffffff8216620002a7565b63ffffffff821660009081526003602052604090205580620002068162000af9565b915050620001bc565b5060a051620002249063ffffffff16620002a7565b6000805260046020527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec55565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600081600003620002d957507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b816001036200030957507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002036200033957507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003036200036957507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b816004036200039957507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600503620003c957507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b81600603620003f957507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b816007036200042957507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008036200045957507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b816009036200048957507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a03620004b957507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b03620004e957507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c036200051957507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d036200054957507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e036200057957507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f03620005a957507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b81601003620005d957507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b816011036200060857507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b816012036200063857507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b816013036200066857507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b816014036200069857507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b81601503620006c857507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b81601603620006f857507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b816017036200072857507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b816018036200075857507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b816019036200078857507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a03620007b857507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b03620007e857507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c036200081857507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d036200084857507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e036200087857507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f03620008a857507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b81602003620008d857507f25a90efc49af54a5b7154a6eaba978dcf04796b4984fe54be8d4ea8579e1f1e6919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000d4565b919050565b80516001600160a01b03811681146200092157600080fd5b6000806000606084860312156200095457600080fd5b6200095f8462000926565b92506200096f6020850162000926565b91506200097f6040850162000926565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620009b357607f821691505b602082108103620009d457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000a2857600081815260208120601f850160051c8101602086101562000a035750805b601f850160051c820191505b8181101562000a245782815560010162000a0f565b5050505b505050565b81516001600160401b0381111562000a495762000a4962000988565b62000a618162000a5a84546200099e565b84620009da565b602080601f83116001811462000a99576000841562000a805750858301515b600019600386901b1c1916600185901b17855562000a24565b600085815260208120601f198616915b8281101562000aca5788860151825594840194600190910190840162000aa9565b508582101562000ae95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600063ffffffff80831681810362000b2157634e487b7160e01b600052601160045260246000fd5b6001019392505050565b60805160a05161398b62000b666000396000818161032b0152818161274d015261280b0152600081816104f80152610850015261398b6000f3fe608060405234801561001057600080fd5b50600436106101fa5760003560e01c80637fe24ffe1161011a578063e5285dcc116100ad578063ed33639f1161007c578063ed33639f146104f3578063f178e47c1461051a578063f242432a1461053a578063f2fde38b1461054d578063fc7e9c6f1461056057600080fd5b8063e5285dcc1461045a578063e82955881461047d578063e985e9c514610490578063ec732959146104cc57600080fd5b8063a22cb465116100e9578063a22cb46514610402578063ba70f75714610415578063c2b40ae414610432578063cd87a3b41461045257600080fd5b80637fe24ffe146103c557806384fcec46146103ce5780638da5cb5b146103e157806390eeb02b146103f257600080fd5b8063414a37ba116101925780636d9833e3116101615780636d9833e314610375578063715018a61461038857806375d8498f14610390578063793deea3146103a357600080fd5b8063414a37ba146102f15780634e1273f4146103065780634ecf518b14610326578063622743291461036257600080fd5b806317cc915c116101ce57806317cc915c1461027d5780632b7ac3f3146102a05780632eb2c2d6146102cb57806338bf282e146102de57600080fd5b8062fdd58e146101ff57806301ffc9a7146102255780630e89341c14610248578063156e29f614610268575b600080fd5b61021261020d3660046129bf565b610578565b6040519081526020015b60405180910390f35b6102386102333660046129ff565b610611565b604051901515815260200161021c565b61025b610256366004612a23565b610661565b60405161021c9190612a82565b61027b610276366004612a95565b6106f5565b005b61023861028b366004612a23565b60076020526000908152604090205460ff1681565b6008546102b3906001600160a01b031681565b6040516001600160a01b03909116815260200161021c565b61027b6102d9366004612c14565b61071d565b6102126102ec366004612cbe565b610769565b61021260008051602061393683398151915281565b610319610314366004612ce0565b6108d6565b60405161021c9190612de6565b61034d7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161021c565b61027b610370366004612df9565b610a00565b610238610383366004612a23565b610b62565b61027b610be0565b61027b61039e366004612df9565b610bf4565b6103b66103b1366004612e34565b610f7b565b60405161021c93929190612ec0565b61021260065481565b6009546102b3906001600160a01b031681565b600a546001600160a01b03166102b3565b60055461034d9063ffffffff1681565b61027b610410366004612ef7565b610fda565b60055463ffffffff16600090815260046020526040902054610212565b610212610440366004612a23565b60046020526000908152604090205481565b61034d606481565b610238610468366004612a23565b60009081526007602052604090205460ff1690565b61021261048b366004612a23565b610fe9565b61023861049e366004612f2e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6102127f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b6102b37f000000000000000000000000000000000000000000000000000000000000000081565b610212610528366004612a23565b60036020526000908152604090205481565b61027b610548366004612f61565b61163c565b61027b61055b366004612fc6565b611681565b60055461034d90640100000000900463ffffffff1681565b60006001600160a01b0383166105e85760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061064257506001600160e01b031982166303a24d0760e21b145b8061060b57506301ffc9a760e01b6001600160e01b031983161461060b565b60606002805461067090612fe1565b80601f016020809104026020016040519081016040528092919081815260200182805461069c90612fe1565b80156106e95780601f106106be576101008083540402835291602001916106e9565b820191906000526020600020905b8154815290600101906020018083116106cc57829003601f168201915b50505050509050919050565b6106fd6116f7565b61071883838360405180602001604052806000815250611751565b505050565b6001600160a01b0385163314806107395750610739853361049e565b6107555760405162461bcd60e51b81526004016105df9061301b565b6107628585858585611865565b5050505050565b600060008051602061393683398151915283106107c85760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c6460448201526064016105df565b600080516020613936833981519152821061082f5760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b60648201526084016105df565b61083761295d565b8381526020810183905260405163014cf2b360e51b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063299e56609061088d90849060040161307f565b602060405180830381865afa1580156108aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ce91906130b0565b949350505050565b6060815183511461093b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016105df565b6000835167ffffffffffffffff81111561095757610957612ac8565b604051908082528060200260200182016040528015610980578160200160208202803683370190505b50905060005b84518110156109f8576109cb8582815181106109a4576109a4613069565b60200260200101518583815181106109be576109be613069565b6020026020010151610578565b8282815181106109dd576109dd613069565b60209081029190910101526109f1816130df565b9050610986565b509392505050565b6000610a0f60208301836130f8565b602001351315610a5857610a5833610a278380613119565b610a399061010081019060e001612fc6565b6001600160a01b0316610a4f60208501856130f8565b60200135611a42565b610a6181611bbe565b6000610a7060208301836130f8565b602001351215610b5f576000610a8960208301836130f8565b610a97906020810190612fc6565b6001600160a01b031603610aed5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f2061646472657373000060448201526064016105df565b610b5f610afd60208301836130f8565b610b0b906020810190612fc6565b610b158380613119565b610b279061010081019060e001612fc6565b6001600160a01b0316610b3d60208501856130f8565b60200135610b4a90613130565b60405180602001604052806000815250611751565b50565b6000818103610b7357506000919050565b60055463ffffffff16805b63ffffffff81166000908152600460205260409020548403610ba4575060019392505050565b8063ffffffff16600003610bb6575060645b80610bc08161314c565b9150508163ffffffff168163ffffffff1603610b7e575060009392505050565b610be86116f7565b610bf260006121e1565b565b6000610c0360208301836130f8565b6020013512610c545760405162461bcd60e51b815260206004820152601c60248201527f657874416d6f756e742073686f756c64206265206e656761746976650000000060448201526064016105df565b6000610c608280613119565b610c729061010081019060e001612fc6565b6001600160a01b031603610cc85760405162461bcd60e51b815260206004820152601d60248201527f7075626c696341737365742073686f756c64206e6f742062652030783000000060448201526064016105df565b610cd181611bbe565b6009546001600160a01b0316610cea60208301836130f8565b610cf8906020810190612fc6565b6001600160a01b031614610d595760405162461bcd60e51b815260206004820152602260248201527f6f6e6c7920737761704578656375746f722063616e20626520726563697069656044820152611b9d60f21b60648201526084016105df565b6000610d6860208301836130f8565b610d799060a0810190608001612fc6565b6001600160a01b031603610dcf5760405162461bcd60e51b815260206004820152601a60248201527f746f6b656e4f75742073686f756c64206e6f742062652030783000000000000060448201526064016105df565b6000610dde60208301836130f8565b60a0013511610e3d5760405162461bcd60e51b815260206004820152602560248201527f616d6f756e744f75744d696e2073686f756c6420626520677265617465722074604482015264068616e20360dc1b60648201526084016105df565b6009546001600160a01b031663a0c6a6ef610e588380613119565b610e6a9061010081019060e001612fc6565b610e7760208501856130f8565b610e889060a0810190608001612fc6565b610e9560208601866130f8565b60200135610ea290613130565b610eaf60208701876130f8565b60a00135610ec060208801886130f8565b610ed29061010081019060e001612fc6565b610edf60208901896130f8565b610ef09060e081019060c001612fc6565b610efd60208a018a6130f8565b610f0c9061010081019061316c565b610f1960208c018c6130f8565b610f289061012081019061316c565b6040518b63ffffffff1660e01b8152600401610f4d9a999897969594939291906131e3565b600060405180830381600087803b158015610f6757600080fd5b505af1158015610762573d6000803e3d6000fd5b610f8361295d565b610f8b61297b565b610f9361295d565b83806020019051810190610fa79190613255565b895160208b8101518b820193909352928a5281830193909352929092528082019290925291905285015283529193909250565b610fe5338383612233565b5050565b60008160000361101a57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160010361104957507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b8160020361107857507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003036110a757507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b816004036110d657507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b8160050361110557507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160060361113457507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b8160070361116357507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b8160080361119257507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b816009036111c157507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a036111f057507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b0361121f57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c0361124e57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d0361127d57507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e036112ac57507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f036112db57507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160100361130a57507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160110361133857507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b8160120361136757507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b8160130361139657507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b816014036113c557507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b816015036113f457507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160160361142357507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b8160170361145257507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b8160180361148157507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b816019036114b057507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a036114df57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b0361150e57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c0361153d57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d0361156c57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e0361159b57507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f036115ca57507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b816020036115f957507f25a90efc49af54a5b7154a6eaba978dcf04796b4984fe54be8d4ea8579e1f1e6919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b60448201526064016105df565b919050565b6001600160a01b0385163314806116585750611658853361049e565b6116745760405162461bcd60e51b81526004016105df9061301b565b6107628585858585612313565b6116896116f7565b6001600160a01b0381166116ee5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105df565b610b5f816121e1565b600a546001600160a01b03163314610bf25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105df565b6001600160a01b0384166117b15760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016105df565b3360006117bd8561243d565b905060006117ca8561243d565b90506000868152602081815260408083206001600160a01b038b168452909152812080548792906117fc9084906132b2565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461185c83600089898989612488565b50505050505050565b81518351146118c75760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016105df565b6001600160a01b0384166118ed5760405162461bcd60e51b81526004016105df906132c5565b3360005b84518110156119d457600085828151811061190e5761190e613069565b60200260200101519050600085838151811061192c5761192c613069565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561197c5760405162461bcd60e51b81526004016105df9061330a565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906119b99084906132b2565b92505081905550505050806119cd906130df565b90506118f1565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611a24929190613354565b60405180910390a4611a3a8187878787876125e3565b505050505050565b6001600160a01b038316611aa45760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016105df565b336000611ab08461243d565b90506000611abd8461243d565b60408051602080820183526000918290528882528181528282206001600160a01b038b1683529052205490915084811015611b465760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016105df565b6000868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a460408051602081019091526000905261185c565b611bd4611bcb8280613119565b60200135610b62565b611c165760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081b595c9adb19481c9bdbdd606a1b60448201526064016105df565b60005b611c238280613119565b506002811015611cc057611c68611c3a8380613119565b6040018260028110611c4e57611c4e613069565b602002013560009081526007602052604090205460ff1690565b15611cae5760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b60448201526064016105df565b80611cb8816130df565b915050611c19565b50600080516020613936833981519152611cdd60208301836130f8565b604051602001611ced91906133c8565b6040516020818303038152906040528051906020012060001c611d109190613520565b611d1a8280613119565b610100013514611d6c5760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c206461746120686173680000000060448201526064016105df565b600654611d7890613130565b611d8560208301836130f8565b60200135138015611da75750600654611da160208301836130f8565b60200135125b611deb5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b60448201526064016105df565b60408051610100810190915260009080611e058480613119565b602090810135825201611e188480613119565b60c001358152602001611e2b8480613119565b611e3d9061010081019060e001612fc6565b6001600160a01b03168152602001611e558480613119565b61010001358152602001611e698480613119565b604001358152602001611e7c8480613119565b606001358152602001611e8f8480613119565b608001358152602001611ea28480613119565b60a0013590529050611efd611eb78380613119565b611ec1908061316c565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525085925061269e915050565b611f395760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b60448201526064016105df565b60005b611f468380613119565b506002811015611fb157600160076000611f608680613119565b6040018460028110611f7457611f74613069565b6020020135815260200190815260200160002060006101000a81548160ff0219169083151502179055508080611fa9906130df565b915050611f3c565b506000611fc160208401846130f8565b60200135121561203e576000611fda60208401846130f8565b611fe8906020810190612fc6565b6001600160a01b03160361203e5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f2061646472657373000060448201526064016105df565b61206261204b8380613119565b608001356120598480613119565b60a00135612734565b5060055461208090600290640100000000900463ffffffff16613534565b63ffffffff166120908380613119565b608001357ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd6120c260208601866130f8565b6120d090604081019061316c565b6040516120de929190613558565b60405180910390a360055461210390600190640100000000900463ffffffff16613534565b63ffffffff166121138380613119565b60a001357ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd61214560208601866130f8565b61215390606081019061316c565b604051612161929190613558565b60405180910390a360005b6121768380613119565b5060028110156107185761218a8380613119565b604001816002811061219e5761219e613069565b60200201357f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce60405160405180910390a2806121d9816130df565b91505061216c565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036122a65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016105df565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166123395760405162461bcd60e51b81526004016105df906132c5565b3360006123458561243d565b905060006123528561243d565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156123955760405162461bcd60e51b81526004016105df9061330a565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906123d29084906132b2565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612432848a8a8a8a8a612488565b505050505050505050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061247757612477613069565b602090810291909101015292915050565b6001600160a01b0384163b15611a3a5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906124cc908990899088908890889060040161356c565b6020604051808303816000875af1925050508015612507575060408051601f3d908101601f19168201909252612504918101906135a6565b60015b6125b3576125136135c3565b806308c379a00361254c57506125276135df565b80612532575061254e565b8060405162461bcd60e51b81526004016105df9190612a82565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016105df565b6001600160e01b0319811663f23a6e6160e01b1461185c5760405162461bcd60e51b81526004016105df90613669565b6001600160a01b0384163b15611a3a5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061262790899089908890889088906004016136b1565b6020604051808303816000875af1925050508015612662575060408051601f3d908101601f1916820190925261265f918101906135a6565b60015b61266e576125136135c3565b6001600160e01b0319811663bc197c8160e01b1461185c5760405162461bcd60e51b81526004016105df90613669565b6000806000806126ad86610f7b565b600854604051636490cd3d60e11b815293965091945092506001600160a01b03169063c9219a7a906126e9908690869086908b9060040161370f565b602060405180830381865afa158015612706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061272a919061376c565b9695505050505050565b600554600090640100000000900463ffffffff166127737f0000000000000000000000000000000000000000000000000000000000000000600261389a565b63ffffffff168163ffffffff16036127e65760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b60648201526084016105df565b60006127f36002836138af565b905060006128018686610769565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff1610156128cd576128486002866138d2565b63ffffffff16600003612886578392506128678163ffffffff16610fe9565b63ffffffff8216600090815260036020526040902085905591506128a2565b63ffffffff811660009081526003602052604090205492508391505b6128ac8383610769565b93506128b96002866138af565b9450806128c5816138f5565b915050612809565b506005546000906064906128e89063ffffffff166001613918565b6128f291906138d2565b6005805463ffffffff191663ffffffff831690811790915560009081526004602052604090208590559050612928866002613918565b6005805463ffffffff929092166401000000000267ffffffff0000000019909216919091179055509394505050505092915050565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b61299261295d565b81526020019060019003908161298a5790505090565b80356001600160a01b038116811461163757600080fd5b600080604083850312156129d257600080fd5b6129db836129a8565b946020939093013593505050565b6001600160e01b031981168114610b5f57600080fd5b600060208284031215612a1157600080fd5b8135612a1c816129e9565b9392505050565b600060208284031215612a3557600080fd5b5035919050565b6000815180845260005b81811015612a6257602081850181015186830182015201612a46565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000612a1c6020830184612a3c565b600080600060608486031215612aaa57600080fd5b612ab3846129a8565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715612b0457612b04612ac8565b6040525050565b600067ffffffffffffffff821115612b2557612b25612ac8565b5060051b60200190565b600082601f830112612b4057600080fd5b81356020612b4d82612b0b565b604051612b5a8282612ade565b83815260059390931b8501820192828101915086841115612b7a57600080fd5b8286015b84811015612b955780358352918301918301612b7e565b509695505050505050565b600082601f830112612bb157600080fd5b813567ffffffffffffffff811115612bcb57612bcb612ac8565b604051612be2601f8301601f191660200182612ade565b818152846020838601011115612bf757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215612c2c57600080fd5b612c35866129a8565b9450612c43602087016129a8565b9350604086013567ffffffffffffffff80821115612c6057600080fd5b612c6c89838a01612b2f565b94506060880135915080821115612c8257600080fd5b612c8e89838a01612b2f565b93506080880135915080821115612ca457600080fd5b50612cb188828901612ba0565b9150509295509295909350565b60008060408385031215612cd157600080fd5b50508035926020909101359150565b60008060408385031215612cf357600080fd5b823567ffffffffffffffff80821115612d0b57600080fd5b818501915085601f830112612d1f57600080fd5b81356020612d2c82612b0b565b604051612d398282612ade565b83815260059390931b8501820192828101915089841115612d5957600080fd5b948201945b83861015612d7e57612d6f866129a8565b82529482019490820190612d5e565b96505086013592505080821115612d9457600080fd5b50612da185828601612b2f565b9150509250929050565b600081518084526020808501945080840160005b83811015612ddb57815187529582019590820190600101612dbf565b509495945050505050565b602081526000612a1c6020830184612dab565b600060208284031215612e0b57600080fd5b813567ffffffffffffffff811115612e2257600080fd5b820160408185031215612a1c57600080fd5b600060208284031215612e4657600080fd5b813567ffffffffffffffff811115612e5d57600080fd5b6108ce84828501612ba0565b8060005b6002811015612e8c578151845260209384019390910190600101612e6d565b50505050565b8060005b6002811015612e8c57612eaa848351612e69565b6040939093019260209190910190600101612e96565b6101008101612ecf8286612e69565b612edc6040830185612e92565b6108ce60c0830184612e69565b8015158114610b5f57600080fd5b60008060408385031215612f0a57600080fd5b612f13836129a8565b91506020830135612f2381612ee9565b809150509250929050565b60008060408385031215612f4157600080fd5b612f4a836129a8565b9150612f58602084016129a8565b90509250929050565b600080600080600060a08688031215612f7957600080fd5b612f82866129a8565b9450612f90602087016129a8565b93506040860135925060608601359150608086013567ffffffffffffffff811115612fba57600080fd5b612cb188828901612ba0565b600060208284031215612fd857600080fd5b612a1c826129a8565b600181811c90821680612ff557607f821691505b60208210810361301557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60408101818360005b60028110156130a7578151835260209283019290910190600101613088565b50505092915050565b6000602082840312156130c257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016130f1576130f16130c9565b5060010190565b6000823561013e1983360301811261310f57600080fd5b9190910192915050565b6000823561011e1983360301811261310f57600080fd5b6000600160ff1b8201613145576131456130c9565b5060000390565b600063ffffffff821680613162576131626130c9565b6000190192915050565b6000808335601e1984360301811261318357600080fd5b83018035915067ffffffffffffffff82111561319e57600080fd5b6020019150368190038213156131b357600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038b811682528a81166020830152604082018a9052606082018990528781166080830152861660a082015261010060c0820181905260009061322f83820187896131ba565b905082810360e08401526132448185876131ba565b9d9c50505050505050505050505050565b600080600080600080600080610100898b03121561327257600080fd5b505086516020880151604089015160608a015160808b015160a08c015160c08d015160e0909d0151959e949d50929b919a50985090965094509092509050565b8082018082111561060b5761060b6130c9565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006133676040830185612dab565b82810360208401526133798185612dab565b95945050505050565b6000808335601e1984360301811261339957600080fd5b830160208101925035905067ffffffffffffffff8111156133b957600080fd5b8036038213156131b357600080fd5b602081526133e9602082016133dc846129a8565b6001600160a01b03169052565b6020820135604082015260006134026040840184613382565b61014080606086015261341a610160860183856131ba565b92506134296060870187613382565b9250601f19808786030160808801526134438585846131ba565b9450613451608089016129a8565b6001600160a01b03811660a0890152935060a088013560c088015261347860c089016129a8565b6001600160a01b03811660e0890152935061349560e089016129a8565b935061010091506134b0828801856001600160a01b03169052565b6134bc82890189613382565b945091506101208188870301818901526134d78686856131ba565b95506134e5818a018a613382565b9550925050808786030183880152506134ff8484836131ba565b979650505050505050565b634e487b7160e01b600052601260045260246000fd5b60008261352f5761352f61350a565b500690565b63ffffffff828116828216039080821115613551576135516130c9565b5092915050565b6020815260006108ce6020830184866131ba565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906134ff90830184612a3c565b6000602082840312156135b857600080fd5b8151612a1c816129e9565b600060033d11156135dc5760046000803e5060005160e01c5b90565b600060443d10156135ed5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561361d57505050505090565b82850191508151818111156136355750505050505090565b843d870101602082850101111561364f5750505050505090565b61365e60208286010187612ade565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a0604082018190526000906136dd90830186612dab565b82810360608401526136ef8186612dab565b905082810360808401526137038185612a3c565b98975050505050505050565b610200810161371e8287612e69565b61372b6040830186612e92565b61373860c0830185612e69565b61010082018360005b6008811015613760578151835260209283019290910190600101613741565b50505095945050505050565b60006020828403121561377e57600080fd5b8151612a1c81612ee9565b600181815b808511156137c6578163ffffffff048211156137ac576137ac6130c9565b808516156137b957918102915b93841c939080029061378e565b509250929050565b6000826137dd5750600161060b565b816137ea5750600061060b565b8160018114613800576002811461380a5761383b565b600191505061060b565b60ff84111561381b5761381b6130c9565b6001841b915063ffffffff821115613835576138356130c9565b5061060b565b5060208310610133831016604e8410600b8410161715613872575081810a63ffffffff81111561386d5761386d6130c9565b61060b565b61387c8383613789565b8063ffffffff04821115613892576138926130c9565b029392505050565b600063ffffffff6108ce8185168285166137ce565b600063ffffffff808416806138c6576138c661350a565b92169190910492915050565b600063ffffffff808416806138e9576138e961350a565b92169190910692915050565b600063ffffffff80831681810361390e5761390e6130c9565b6001019392505050565b63ffffffff818116838216019080821115613551576135516130c956fe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a264697066735822122071eb9e9fc9112eee6acd55406cd1b51ea3d32c02b1d8451e33fbc52b2a0e265264736f6c63430008120033";

type ZRC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZRC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZRC1155__factory extends ContractFactory {
  constructor(...args: ZRC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _hasherAddress: PromiseOrValue<string>,
    _verifier: PromiseOrValue<string>,
    _swapExecutor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZRC1155> {
    return super.deploy(
      _hasherAddress,
      _verifier,
      _swapExecutor,
      overrides || {}
    ) as Promise<ZRC1155>;
  }
  override getDeployTransaction(
    _hasherAddress: PromiseOrValue<string>,
    _verifier: PromiseOrValue<string>,
    _swapExecutor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasherAddress,
      _verifier,
      _swapExecutor,
      overrides || {}
    );
  }
  override attach(address: string): ZRC1155 {
    return super.attach(address) as ZRC1155;
  }
  override connect(signer: Signer): ZRC1155__factory {
    return super.connect(signer) as ZRC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZRC1155Interface {
    return new utils.Interface(_abi) as ZRC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZRC1155 {
    return new Contract(address, _abi, signerOrProvider) as ZRC1155;
  }
}
